{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/init(path:)","title":"init?(path: String)","type":"init"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/init(runningapplication:)","title":"init?(runningApplication: NSRunningApplication)","type":"init"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/init(url:)","title":"init?(url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/displayname","title":"var displayName: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/iconpath","title":"var iconPath: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/iconurl","title":"var iconURL: URL?","type":"property"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/isrunning","title":"var isRunning: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/shortversion","title":"var shortVersion: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/supportedfileextensions","title":"var supportedFileExtensions: [String]","type":"property"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/supportedfiletypes","title":"var supportedFileTypes: [FileTypeDefinition]","type":"property"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/version","title":"var version: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/open()","title":"func open()","type":"method"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/openfile(_:)","title":"func openFile(URL)","type":"method"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/openfiles(_:)","title":"func openFiles([URL])","type":"method"}],"path":"\/documentation\/fzswiftutils\/applicationbundle","title":"ApplicationBundle","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/associatedobject\/get(_:)","title":"func get<T>(String) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/associatedobject\/get(_:initialvalue:)-47zrk","title":"func get<T>(String, initialValue: () -> T) -> T","type":"method"},{"path":"\/documentation\/fzswiftutils\/associatedobject\/get(_:initialvalue:)-91zwt","title":"func get<T>(String, initialValue: () -> T) -> T","type":"method"},{"path":"\/documentation\/fzswiftutils\/associatedobject\/set(_:key:)","title":"func set<T>(T, key: String)","type":"method"},{"path":"\/documentation\/fzswiftutils\/associatedobject\/set(weak:key:)","title":"func set<T>(weak: T?, key: String)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/associatedobject\/subscript(_:_:)","title":"subscript<T>(String, T?) -> T?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/associatedobject\/subscript(weak:_:)","title":"subscript<T>(weak _: String, T?) -> T?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/associatedobject","title":"AssociatedObject","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncblockoperation\/init(closure:)","title":"init(closure: ((AsyncBlockOperation) -> ()))","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncblockoperation\/closure","title":"let closure: ((AsyncBlockOperation) -> ())","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncblockoperation\/start()","title":"func start()","type":"method"}],"path":"\/documentation\/fzswiftutils\/asyncblockoperation","title":"AsyncBlockOperation","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/error","title":"var error: Error?","type":"property"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/isasynchronous","title":"var isAsynchronous: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/iscancelled","title":"var isCancelled: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/isexecuting","title":"var isExecuting: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/isfinished","title":"var isFinished: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/ispaused","title":"var isPaused: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/isready","title":"var isReady: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/onstatechange","title":"var onStateChange: ((State) -> Void)?","type":"property"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.property","title":"var state: State","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/finish()","title":"func finish()","type":"method"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/pause()","title":"func pause()","type":"method"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/resume()","title":"func resume()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/cancelled","title":"case cancelled","type":"case"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/executing","title":"case executing","type":"case"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/finished","title":"case finished","type":"case"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/paused","title":"case paused","type":"case"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/ready","title":"case ready","type":"case"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/waiting","title":"case waiting","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/isequal(_:)-9ou5i","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/isequal(_:)-x6zl","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum","title":"AsyncOperation.State","type":"enum"}],"path":"\/documentation\/fzswiftutils\/asyncoperation","title":"AsyncOperation","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/init()","title":"init()","type":"init"},{"path":"\/documentation\/fzswiftutils\/basearray\/init(_:)-441bc","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/basearray\/init(arrayliteral:)","title":"init(arrayLiteral: ElementType...)","type":"init"},{"path":"\/documentation\/fzswiftutils\/basearray\/init(repeating:count:)-72chd","title":"init(repeating: ElementType, count: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/count-8b8r","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/indices","title":"var indices: Range<Int>","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/isempty-9owfr","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/underestimatedcount-8g57g","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/append(_:)","title":"func append(ElementType)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/append(contentsof:)","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/distance(from:to:)","title":"func distance(from: Int, to: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/formindex(after:)","title":"func formIndex(after: inout Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/formindex(before:)","title":"func formIndex(before: inout Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/index(_:offsetby:)","title":"func index(Int, offsetBy: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/index(_:offsetby:limitedby:)","title":"func index(Int, offsetBy: Int, limitedBy: Int) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/index(before:)","title":"func index(before: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/insert(_:at:)","title":"func insert(ElementType, at: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/insert(contentsof:at:)","title":"func insert<S>(contentsOf: S, at: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/partition(by:)","title":"func partition(by: (ElementType) throws -> Bool) rethrows -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(at:)","title":"func remove(at: Int) -> ElementType","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removeall(keepingcapacity:)","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removeall(where:)","title":"func removeAll(where: (ElementType) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removefirst()","title":"func removeFirst() -> ElementType","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removefirst(_:)","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removelast()","title":"func removeLast()","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removelast(_:)","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removesubrange(_:)","title":"func removeSubrange(Range<Int>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replacesubrange(_:with:)","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/set(contents:)","title":"func set(contents: [ElementType])","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/swapat(_:_:)","title":"func swapAt(Int, Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<ElementType>) throws -> R) rethrows -> R?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/withcontiguousstorageifavailable(_:)-98u0k","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<ElementType>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-p5c6","title":"subscript(Int) -> ElementType","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/firstrange(of:)-4u1oh","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(separator:)-1a43t","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/fzswiftutils\/basearray\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/count-7g0bz","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/isempty-2or2q","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/underestimatedcount-4ol6e","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/advance(by:current:excluding:)","title":"func advance(by: AdvanceOption, current: Element?, excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/advanceindex(by:current:excluding:)","title":"func advanceIndex(by: AdvanceOption, current: Element?, excluding: [Element]) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/anyflattened()","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/average()-3tvgu","title":"func average() -> Double","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/average()-541xw","title":"func average() -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/averagesize()","title":"func averageSize() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/chunked(by:ascending:)-5hw7j","title":"func chunked<C>(by: (Element) -> C?, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/chunked(by:ascending:)-6apmr","title":"func chunked<C>(by: KeyPath<Element, C?>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/chunked(by:ascending:)-6u166","title":"func chunked<C>(by: KeyPath<Element, C>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/chunked(into:)","title":"func chunked(into: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/chunked(topieces:)","title":"func chunked(toPieces: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(_:)-94gh0","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/firstrange(of:)-79yd3","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/flattened()-4aea0","title":"func flattened<V>() -> [V]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/flattened()-6ftdk","title":"func flattened() -> [Element.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/index(of:)-1ywnv","title":"func index(of: Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/index(of:)-4rkdq","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/indexes(of:)-945bk","title":"func indexes<S>(of: S) -> [Self.Index]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(separator:)-3yopj","title":"func joined(separator: String) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(separator:)-842or","title":"func joined(separator: AttributedString) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/map(_:)-9e2cl","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/split(separator:maxsplits:omittingemptysubsequences:)-2qqx6","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/split(separator:maxsplits:omittingemptysubsequences:)-6irka","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sum()-3wezt","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sum()-7ns75","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/totalsize()","title":"func totalSize() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-3b22l","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-43umc","title":"subscript([Index]) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-46kmu","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-4qbq2","title":"subscript(IndexSet) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-54lwt","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/basearray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/withunsafebytes(_:)","title":"func withUnsafeBytes<R>((UnsafeRawBufferPointer) throws -> R) rethrows -> R","type":"method"}],"path":"\/documentation\/fzswiftutils\/basearray\/contiguousbytes-implementations","title":"ContiguousBytes Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/basearray\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/custommirror","title":"var customMirror: Mirror","type":"property"}],"path":"\/documentation\/fzswiftutils\/basearray\/customreflectable-implementations","title":"CustomReflectable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/basearray\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/basearray\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/==(_:_:)","title":"static func == (BaseArray<ElementType>, BaseArray<ElementType>) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/isequal(_:)-4tdk4","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/isequal(_:)-iwxr","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/basearray\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/basearray\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/editeach(_:)","title":"func editEach((inout Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(fromoffsets:tooffset:)","title":"func move(fromOffsets: IndexSet, toOffset: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sort(using:)-5ciyz","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sort(using:)-5zlr","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-4goo7","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-7v159","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-8ews0","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-8wtgu","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-9bp3k","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/basearray\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/+(_:_:)-134zj","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/+(_:_:)-19z5","title":"static func + (Element?, Self) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/+(_:_:)-2wthe","title":"static func + <Other>(Other, Self) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/+(_:_:)-5kiz5","title":"static func + (Self, Element?) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/+(_:_:)-6okc9","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/+=(_:_:)-8m0vw","title":"static func += <Other>(inout Self, Other)","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/+=(_:_:)-ebja","title":"static func += (inout Self, Element?)","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/-(_:_:)-1s6x0","title":"static func - (Self, Element?) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/-(_:_:)-8n7sb","title":"static func - <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/-=(_:_:)-4o4ju","title":"static func -= (inout Self, Element?)","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/-=(_:_:)-9knuu","title":"static func -= <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/init(_:)-3hsjf","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/basearray\/init(repeating:count:)-92u30","title":"init(repeating: Self.Element, count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/applying(_:)","title":"func applying(CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/indexes(of:)-57l1f","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:after:)-3bjnx","title":"func move(Element, after: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:after:)-ds2i","title":"func move<S>(S, after: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:before:)-50lq3","title":"func move(Element, before: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:before:)-74uup","title":"func move<S>(S, before: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:to:)-8mxez","title":"func move(Element, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:to:)-mcru","title":"func move<S>(S, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(from:to:)-5zb6e","title":"func move(from: IndexSet, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(from:to:)-9ewtf","title":"func move(from: Int, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(_:)-3k6nc","title":"func remove<S>(S) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(_:)-4kaq3","title":"func remove<S>(S) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(_:)-6ovvf","title":"func remove(Element) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(atoffsets:)","title":"func remove(atOffsets: IndexSet)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removeall(containing:)","title":"func removeAll<Value>(containing: KeyPath<Element, Value?>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replace(_:with:)-3ak80","title":"func replace<C>(Element, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replace(_:with:)-5utq3","title":"func replace(Element, with: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replace(_:with:maxreplacements:)","title":"func replace<C, Replacement>(C, with: Replacement, maxReplacements: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replace(first:with:)-5tdyw","title":"func replace(first: Element, with: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replace(first:with:)-8ija2","title":"func replace<C>(first: Element, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replacing(_:with:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replacing(_:with:subrange:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, subrange: Range<Self.Index>, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/trimprefix(_:)","title":"func trimPrefix<Prefix>(Prefix)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) rethrows","type":"method"}],"path":"\/documentation\/fzswiftutils\/basearray\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/underestimatedcount-6tkve","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/collect(completionhandler:)","title":"func collect(completionHandler: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/compactmap(_:)-28vrn","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/compactmap(_:)-7teoe","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/compactmap(_:)-9ob94","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentcompactmap(withpriority:_:)-88vld","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentcompactmap(withpriority:_:)-8923n","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentflatmap(withpriority:_:)-2ecv3","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentflatmap(withpriority:_:)-kca","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentmap(withpriority:_:)-6vw3z","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentmap(withpriority:_:)-9wqdz","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(_:)-52zym","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(_:)-6qfb1","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(all:)","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(any:)","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/fill(using:)-6tvj5","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/fill(using:)-7cgs4","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/fill(using:)-8pg12","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/flatmap(_:)-4mt09","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/flatmap(_:)-4o9i0","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/flatmap(_:)-5e9af","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/indexes(of:)-42uic","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(by:)","title":"func joined(by: String.JoinOptions) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(separator:)-46bfj","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(separator:)-6wtx6","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/map(_:)-1lalj","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/map(_:)-4yt8m","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelement(excluding:)","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:_:)-1anxa","title":"func sorted<T>(by: KeyPath<Element, T>, SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:_:)-7o9h3","title":"func sorted<T>(by: KeyPath<Element, T?>, SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:_:)-941y4","title":"func sorted<T>(by: (Element) -> T, SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:order:)","title":"func sorted(by: PartialKeyPath<Element>..., order: SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(using:)-6iq8g","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(using:)-8r4gh","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/split(separator:maxsplits:omittingemptysubsequences:)-2b9mx","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/uniqued(by:)-3tzie","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/uniqued(by:)-733lj","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/withcontiguousstorageifavailable(_:)-3xuiu","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/basearray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/basearray","title":"BaseArray","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaults\/init(userdefaults:)","title":"init(userDefaults: UserDefaults)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaults\/clear(_:)","title":"func clear<ValueType>(Key<ValueType>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/get(for:)-1z6d4","title":"func get<ValueType>(for: Key<ValueType>) -> ValueType?","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/get(for:)-975b6","title":"func get<ValueType>(for: Key<ValueType>) -> ValueType?","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/get(for:)-z3ne","title":"func get<ValueType>(for: String) -> ValueType?","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/has(_:)","title":"func has<ValueType>(Key<ValueType>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/removeall(bundle:)","title":"func removeAll(bundle: Bundle)","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/set(_:for:)-18uyp","title":"func set<ValueType>(ValueType?, for: String)","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/set(_:for:)-1fopo","title":"func set<ValueType>(ValueType, for: Key<ValueType>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/set(_:for:)-7xh94","title":"func set<ValueType>(ValueType, for: Key<ValueType>)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaults\/subscript(_:)-2h9le","title":"subscript<T>(String) -> T?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/defaults\/subscript(_:)-475t1","title":"subscript<T>(Key<T>) -> T?","type":"subscript"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaults\/shared","title":"static let shared: Defaults","type":"property"}],"path":"\/documentation\/fzswiftutils\/defaults","title":"Defaults","type":"class"},{"path":"\/documentation\/fzswiftutils\/defaultskey","title":"DefaultsKey","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/init(source:type:thumbnailoptions:imageoptions:loop:)","title":"init(source: ImageSource, type: ImageType, thumbnailOptions: ThumbnailOptions?, imageOptions: ImageOptions?, loop: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/currentframe","title":"var currentFrame: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/framecount","title":"let frameCount: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imageoptions","title":"let imageOptions: ImageOptions?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/loop","title":"let loop: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/source","title":"let source: ImageSource","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/thumbnailoptions","title":"let thumbnailOptions: ThumbnailOptions?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/type","title":"let type: ImageType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/next()","title":"func next() async -> CGImage?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/image(source:options:loop:)","title":"static func image(source: ImageSource, options: ImageOptions?, loop: Bool) -> ImageIterator","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/thumbnail(source:options:loop:)","title":"static func thumbnail(source: ImageSource, options: ThumbnailOptions?, loop: Bool) -> ImageIterator","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/image","title":"case image","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/thumbnail","title":"case thumbnail","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/isequal(_:)-13u6n","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/isequal(_:)-9ynsg","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype","title":"ImageSource.ImageIterator.ImageType","type":"enum"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator","title":"ImageSource.ImageIterator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/init()","title":"init()","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/shouldallowfloat","title":"var shouldAllowFloat: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/shouldcache","title":"var shouldCache: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/shoulddecodeimmediately","title":"var shouldDecodeImmediately: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.property","title":"var subsampleFactor: SubsampleFactor?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/shouldallowfloat","title":"case shouldAllowFloat","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/shouldcache","title":"case shouldCache","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/shoulddecodeimmediately","title":"case shouldDecodeImmediately","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/subsamplefactor","title":"case subsampleFactor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/isequal(_:)-18wci","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/isequal(_:)-3i8x3","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys","title":"ImageSource.ImageOptions.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/factor2","title":"case factor2","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/factor4","title":"case factor4","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/factor8","title":"case factor8","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/isequal(_:)-1vay4","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/isequal(_:)-2fyb0","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum","title":"ImageSource.ImageOptions.SubsampleFactor","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions","title":"ImageSource.ImageOptions","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imageoptions","title":"let imageOptions: ImageOptions?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/loop","title":"let loop: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/source","title":"let source: ImageSource","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/thumbnailoptions","title":"let thumbnailOptions: ThumbnailOptions?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/type","title":"let type: ImageType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/makeasynciterator()","title":"func makeAsyncIterator() -> ImageIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/element","title":"ImageSource.ImageSequence.Element","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/image","title":"case image","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/thumbnail","title":"case thumbnail","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/isequal(_:)-6w2ql","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/isequal(_:)-7y606","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype","title":"ImageSource.ImageSequence.ImageType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/collect()","title":"func collect() throws -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/collect(completionhandler:)","title":"func collect(completionHandler: ([Element]) -> Void) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/compactmap(_:)-64tk0","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/compactmap(_:)-9y193","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/flatmap(_:)-1oamg","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/flatmap(_:)-8qt6c","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/map(_:)-4wgaz","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/map(_:)-814yl","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence","title":"ImageSource.ImageSequence","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/init()","title":"init()","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.property","title":"var createOption: CreateOption","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/maxsize","title":"var maxSize: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/shouldallowfloat","title":"var shouldAllowFloat: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/shouldcache","title":"var shouldCache: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/shoulddecodeimmediately","title":"var shouldDecodeImmediately: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/shouldtransform","title":"var shouldTransform: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.property","title":"var subsampleFactor: SubsampleFactor?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/maxsize(_:)-3iv2a","title":"static func maxSize(Int) -> ThumbnailOptions","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/maxsize(_:)-9eyd5","title":"static func maxSize(CGSize) -> ThumbnailOptions","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor(_:)","title":"static func subsampleFactor(SubsampleFactor) -> ThumbnailOptions","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/createalways","title":"case createAlways","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/createifabsent","title":"case createIfAbsent","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/maxsize","title":"case maxSize","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/shouldallowfloat","title":"case shouldAllowFloat","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/shouldcache","title":"case shouldCache","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/shoulddecodeimmediately","title":"case shouldDecodeImmediately","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/shouldtransform","title":"case shouldTransform","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/subsamplefactor","title":"case subsampleFactor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/isequal(_:)-7qshw","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/isequal(_:)-7xk4y","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys","title":"ImageSource.ThumbnailOptions.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/always","title":"case always","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/ifabsent","title":"case ifAbsent","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/never","title":"case never","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/isequal(_:)-8slz1","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/isequal(_:)-9bskf","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum","title":"ImageSource.ThumbnailOptions.CreateOption","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/factor2","title":"case factor2","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/factor4","title":"case factor4","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/factor8","title":"case factor8","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/isequal(_:)-6s0kr","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/isequal(_:)-7znem","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum","title":"ImageSource.ThumbnailOptions.SubsampleFactor","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions","title":"ImageSource.ThumbnailOptions","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/init(_:)","title":"init(CGImageSource)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/init(data:)","title":"init?(data: Data)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/init(image:)","title":"init?(image: NSImage)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/init(path:)","title":"init?(path: String)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/init(url:)","title":"init?(url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/animationduration","title":"var animationDuration: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/cgimagesource","title":"let cgImageSource: CGImageSource","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/isanimatable","title":"var isAnimatable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/isanimated","title":"var isAnimated: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/pixelsize","title":"var pixelSize: CGSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/primaryimageindex","title":"var primaryImageIndex: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/status","title":"var status: CGImageSourceStatus","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/typeidentifier","title":"var typeIdentifier: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/uttype","title":"var utType: UTType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/getimage(at:options:)","title":"func getImage(at: Int, options: ImageOptions?) -> CGImage?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/getthumbnail(at:options:)","title":"func getThumbnail(at: Int, options: ThumbnailOptions?) -> CGImage?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/image(at:options:)","title":"func image(at: Int, options: ImageOptions?) async -> CGImage?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/image(at:options:completionhandler:)","title":"func image(at: Int, options: ImageOptions?, completionHandler: (CGImage?) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageframes(options:)","title":"func imageFrames(options: ImageOptions?) -> ImageFrameSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/images(options:)","title":"func images(options: ImageOptions?) -> ImageSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/properties()","title":"func properties() -> ImageProperties?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/properties(at:)","title":"func properties(at: Int) -> ImageProperties?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/status(at:)","title":"func status(at: Int) -> CGImageSourceStatus","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnail(at:options:)","title":"func thumbnail(at: Int, options: ThumbnailOptions?) async -> CGImage?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnail(at:options:completionhandler:)","title":"func thumbnail(at: Int, options: ThumbnailOptions?, completionHandler: (CGImage?) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailframes(options:)","title":"func thumbnailFrames(options: ThumbnailOptions?) -> ImageFrameSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnails(options:)","title":"func thumbnails(options: ThumbnailOptions?) -> ImageSequence","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/defaultframeduration","title":"static let defaultFrameDuration: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/imagesource\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/imagesource\/==(_:_:)","title":"static func == (ImageSource, ImageSource) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/isequal(_:)-1fi1a","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/isequal(_:)-6r2qx","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource","title":"ImageSource","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/key\/init(_:)","title":"init(String)","type":"init"}],"path":"\/documentation\/fzswiftutils\/key","title":"Key","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/init(_:)","title":"init(Object)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/observedobject","title":"var observedObject: Object?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/add(_:handler:)-157ws","title":"func add([PartialKeyPath<Object>], handler: ((_ keyPath: PartialKeyPath<Object>) -> ()))","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/add(_:handler:)-2fboj","title":"func add(String, handler: (_ oldValue: Any, _ newValue: Any) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/add(_:handler:)-6pxy3","title":"func add<Value>(KeyPath<Object, Value>, handler: ((_ oldValue: Value, _ newValue: Value) -> ()))","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/add(_:handler:)-7c4cn","title":"func add<Value>(KeyPath<Object, Value>, handler: ((_ oldValue: Value, _ newValue: Value) -> ()))","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/isobserving()","title":"func isObserving() -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/isobserving(_:)-1nzh0","title":"func isObserving(String) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/isobserving(_:)-8i9c5","title":"func isObserving(PartialKeyPath<Object>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/observevalue(forkeypath:of:change:context:)","title":"func observeValue(forKeyPath: String?, of: Any?, change: [NSKeyValueChangeKey : Any]?, context: UnsafeMutableRawPointer?)","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/remove(_:)-2x1ql","title":"func remove(PartialKeyPath<Object>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/remove(_:)-9ivuu","title":"func remove<S>(S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/remove(_:)-y0wp","title":"func remove(String)","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/removeall()","title":"func removeAll()","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/subscript(_:)-2tylu","title":"subscript(String) -> ((_ oldValue: Any, _ newValue: Any) -> ())?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/subscript(_:)-3w9qx","title":"subscript<Value>(KeyPath<Object, Value>) -> ((_ oldValue: Value, _ newValue: Value) -> ())?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/subscript(_:)-43z59","title":"subscript<Value>(KeyPath<Object, Value>) -> ((_ oldValue: Value, _ newValue: Value) -> ())?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/keyvalueobserver","title":"KeyValueObserver","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/measuretime\/printtimeelapsed(title:running:)","title":"class func printTimeElapsed(title: String, running: () -> Void) -> Double","type":"method"},{"path":"\/documentation\/fzswiftutils\/measuretime\/timeelapsed(running:)","title":"class func timeElapsed(running: () -> Void) -> Double","type":"method"}],"path":"\/documentation\/fzswiftutils\/measuretime","title":"MeasureTime","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/notificationtoken\/init(notificationcenter:token:)","title":"init(notificationCenter: NotificationCenter, token: Any)","type":"init"}],"path":"\/documentation\/fzswiftutils\/notificationtoken","title":"NotificationToken","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/pausableoperationqueue\/pausableoperations","title":"var pausableOperations: [PausableOperation]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/pausableoperationqueue\/addoperation(_:)","title":"func addOperation(Operation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/pausableoperationqueue\/addoperations(_:waituntilfinished:)","title":"func addOperations([Operation], waitUntilFinished: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/pausableoperationqueue\/cancelalloperations()","title":"func cancelAllOperations()","type":"method"},{"path":"\/documentation\/fzswiftutils\/pausableoperationqueue\/pause()","title":"func pause()","type":"method"},{"path":"\/documentation\/fzswiftutils\/pausableoperationqueue\/resume()","title":"func resume()","type":"method"}],"path":"\/documentation\/fzswiftutils\/pausableoperationqueue","title":"PausableOperationQueue","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/allowsemptyselection","title":"var allowsEmptySelection: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/allowsmultipleselection","title":"var allowsMultipleSelection: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/allowsselection","title":"var allowsSelection: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/selectedelements","title":"var selectedElements: [ElementType]","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/selectedindexes","title":"var selectedIndexes: [Int]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/append(_:)","title":"func append(ElementType)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/append(contentsof:)","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/deselect(at:)-8dn6w","title":"func deselect(at: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/deselect(at:)-90pg7","title":"func deselect(at: [Int])","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/deselectfirst()","title":"func deselectFirst()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/deselectfirst(_:)","title":"func deselectFirst(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/deselectlast()","title":"func deselectLast()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/deselectlast(_:)","title":"func deselectLast(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/remove(at:)","title":"func remove(at: Int) -> ElementType","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removeall(keepingcapacity:)","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removeall(where:)","title":"func removeAll(where: (ElementType) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removefirst()","title":"func removeFirst() -> ElementType","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removefirst(_:)","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removelast()","title":"func removeLast()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removelast(_:)","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removeselected()","title":"func removeSelected()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removesubrange(_:)","title":"func removeSubrange(Range<Int>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/select(_:exclusivly:)","title":"func select(AdvanceOption, exclusivly: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/select(at:)-3gwgm","title":"func select(at: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/select(at:)-9b1rj","title":"func select(at: [Int])","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/select(at:exclusivly:)","title":"func select(at: Int, exclusivly: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/selectfirst()","title":"func selectFirst()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/selectfirst(_:)","title":"func selectFirst(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/selectlast()","title":"func selectLast()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/selectlast(_:)","title":"func selectLast(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/swapat(_:_:)","title":"func swapAt(Int, Int)","type":"method"}],"path":"\/documentation\/fzswiftutils\/selectablearray","title":"SelectableArray","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/synchronizedarray","title":"var synchronizedArray: [Element]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/append(_:)","title":"func append(Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(_:)-4kv4v","title":"func contains(Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(_:)","title":"func index(Element) -> Int?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/distance(from:to:)","title":"func distance(from: Int, to: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/firstrange(of:)-6fim6","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/formindex(after:)","title":"func formIndex(after: inout Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/formindex(before:)","title":"func formIndex(before: inout Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(_:offsetby:)","title":"func index(Int, offsetBy: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(_:offsetby:limitedby:)","title":"func index(Int, offsetBy: Int, limitedBy: Int) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(before:)","title":"func index(before: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(separator:)-3zjck","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/count-4kd6y","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/count-8dgrn","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/underestimatedcount-8vv8g","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/advance(by:current:excluding:)","title":"func advance(by: AdvanceOption, current: Element?, excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/advanceindex(by:current:excluding:)","title":"func advanceIndex(by: AdvanceOption, current: Element?, excluding: [Element]) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/anyflattened()","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/average()-4d2yw","title":"func average() -> Double","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/average()-6wick","title":"func average() -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/averagesize()","title":"func averageSize() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/chunked(by:ascending:)-208cd","title":"func chunked<C>(by: (Element) -> C?, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/chunked(by:ascending:)-3ergt","title":"func chunked<C>(by: KeyPath<Element, C>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/chunked(by:ascending:)-3kr7a","title":"func chunked<C>(by: KeyPath<Element, C?>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/chunked(into:)","title":"func chunked(into: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/chunked(topieces:)","title":"func chunked(toPieces: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(_:)-4sdi8","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/firstrange(of:)-7iqsx","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/flattened()-3y6r","title":"func flattened() -> [Element.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/flattened()-4guyb","title":"func flattened<V>() -> [V]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(of:)-1gciv","title":"func index(of: Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(of:)-95nhe","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/indexes(of:)-4emyl","title":"func indexes<S>(of: S) -> [Self.Index]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(separator:)-67kv7","title":"func joined(separator: AttributedString) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(separator:)-6gtep","title":"func joined(separator: String) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/map(_:)-6n4fl","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/split(separator:maxsplits:omittingemptysubsequences:)-1p32n","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/split(separator:maxsplits:omittingemptysubsequences:)-24ihr","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sum()-6c3cj","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sum()-9bu5e","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/totalsize()","title":"func totalSize() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-16ecc","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-1ybzp","title":"subscript(IndexSet) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-2iflg","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-34qmn","title":"subscript([Index]) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-5uqaq","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-pbqn","title":"subscript(Int) -> Element","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/underestimatedcount-6lwks","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/collect(completionhandler:)","title":"func collect(completionHandler: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/compactmap(_:)-1po10","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/compactmap(_:)-1z1ks","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/compactmap(_:)-wzqt","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentcompactmap(withpriority:_:)-47ipx","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentcompactmap(withpriority:_:)-4xa7l","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentflatmap(withpriority:_:)-1yvox","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentflatmap(withpriority:_:)-6rso6","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentmap(withpriority:_:)-2qgjd","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentmap(withpriority:_:)-5avu6","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(_:)-4takl","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(_:)-6cgqe","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(all:)","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(any:)","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/fill(using:)-5b586","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/fill(using:)-5vi9k","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/fill(using:)-7oqxe","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/flatmap(_:)-452on","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/flatmap(_:)-7oern","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/flatmap(_:)-9q8et","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/indexes(of:)-32zqw","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(by:)","title":"func joined(by: String.JoinOptions) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(separator:)-4b1vb","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(separator:)-8ro5q","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/map(_:)-47ryn","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/map(_:)-ydtz","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelement(excluding:)","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(by:_:)-4rapr","title":"func sorted<T>(by: KeyPath<Element, T>, SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(by:_:)-5byv3","title":"func sorted<T>(by: (Element) -> T, SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(by:_:)-rb7r","title":"func sorted<T>(by: KeyPath<Element, T?>, SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(by:order:)","title":"func sorted(by: PartialKeyPath<Element>..., order: SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(using:)-3dj58","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(using:)-5ofsm","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/split(separator:maxsplits:omittingemptysubsequences:)-7by6e","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/uniqued(by:)-6k58z","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/uniqued(by:)-odoq","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray","title":"SynchronizedArray","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/urlredirection\/shared","title":"static let shared: URLRedirection","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/urlredirection\/redirectedurl(for:)","title":"static func redirectedURL(for: URL) throws -> URL?","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlredirection\/redirectedurl(for:completionhandler:)","title":"static func redirectedURL(for: URL, completionHandler: (URL?, Error?) -> ())","type":"method"}],"path":"\/documentation\/fzswiftutils\/urlredirection","title":"URLRedirection","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/availablecapacity","title":"var availableCapacity: DataSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/creationdate","title":"var creationDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/isejectable","title":"var isEjectable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/isreadonly","title":"var isReadOnly: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/isremovable","title":"var isRemovable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/isrootfilesystem","title":"var isRootFileSystem: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/localizedname","title":"var localizedName: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/resourcecount","title":"var resourceCount: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/supportsaccesspermissions","title":"var supportsAccessPermissions: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/supportsrenaming","title":"var supportsRenaming: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/supportssymboliclinks","title":"var supportsSymbolicLinks: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/totalcapacity","title":"var totalCapacity: DataSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/url","title":"var url: URL?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/uuid","title":"var uuid: String?","type":"property"}],"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources","title":"URLResources.VolumeURLResources","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/urlresources\/init(url:)","title":"init(url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/urlresources\/addedtodirectorydate","title":"var addedToDirectoryDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/applicationisscriptable","title":"var applicationIsScriptable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/attributemodificationdate","title":"var attributeModificationDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/canonicalpath","title":"var canonicalPath: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/contentaccessdate","title":"var contentAccessDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/contentmodificationdate","title":"var contentModificationDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/contenttype","title":"var contentType: UTType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/contenttypeidentifier","title":"var contentTypeIdentifier: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/contenttypeidentifiertree","title":"var contentTypeIdentifierTree: [String]","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/creationdate","title":"var creationDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/customicon","title":"var customIcon: NSUIImage?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/documentidentifier","title":"var documentIdentifier: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/downloaddate","title":"var downloadDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/effectiveicon","title":"var effectiveIcon: NSUIImage?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/fileallocatedsize","title":"var fileAllocatedSize: DataSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/filecontentidentifier","title":"var fileContentIdentifier: Int64?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/fileprotection","title":"var fileProtection: URLFileProtection?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/fileresourcetype","title":"var fileResourceType: URLFileResourceType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/filesecurity","title":"var fileSecurity: NSFileSecurity?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/filesize","title":"var fileSize: DataSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/generationidentifier","title":"var generationIdentifier: (NSCopying & NSSecureCoding & NSObjectProtocol)?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/hashiddenextension","title":"var hasHiddenExtension: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isaliasfile","title":"var isAliasFile: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isapplication","title":"var isApplication: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isdirectory","title":"var isDirectory: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isexcludedfrombackup","title":"var isExcludedFromBackup: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isexecutable","title":"var isExecutable: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ishidden","title":"var isHidden: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ismounttrigger","title":"var isMountTrigger: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ispackage","title":"var isPackage: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ispurgeable","title":"var isPurgeable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isreadable","title":"var isReadable: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isregularfile","title":"var isRegularFile: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/issparse","title":"var isSparse: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/issymboliclink","title":"var isSymbolicLink: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/issystemimmutable","title":"var isSystemImmutable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isubiquitousitem","title":"var isUbiquitousItem: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isuserimmutable","title":"var isUserImmutable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isvolume","title":"var isVolume: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/iswritable","title":"var isWritable: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/labelcolor","title":"var labelColor: NSUIColor?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/labellocalizedname","title":"var labelLocalizedName: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/labelnumber","title":"var labelNumber: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/linkcount","title":"var linkCount: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/localizedname","title":"var localizedName: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/localizedtypedescription","title":"var localizedTypeDescription: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/mayhaveextendedattributes","title":"var mayHaveExtendedAttributes: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/maysharefilecontent","title":"var mayShareFileContent: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/parentdirectory","title":"var parentDirectory: URL?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/path","title":"var path: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/preferredioblocksize","title":"var preferredIOBlockSize: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/quarantineproperties","title":"var quarantineProperties: [String : Any]?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/supportedapplicationurls","title":"var supportedApplicationURLs: [URL]?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/tags","title":"var tags: [String]","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/totalfileallocatedsize","title":"var totalFileAllocatedSize: DataSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/totalfilesize","title":"var totalFileSize: DataSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ubiquitousitemdownloadingstatus","title":"var ubiquitousItemDownloadingStatus: URLUbiquitousItemDownloadingStatus?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ubiquitousitemhasunresolvedconflicts","title":"var ubiquitousItemHasUnresolvedConflicts: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ubiquitousitemisdownloading","title":"var ubiquitousItemIsDownloading: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ubiquitousitemisuploaded","title":"var ubiquitousItemIsUploaded: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ubiquitousitemisuploading","title":"var ubiquitousItemIsUploading: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/url","title":"var url: URL","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volume","title":"var volume: VolumeURLResources","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/wherefroms","title":"var whereFroms: [String]?","type":"property"}],"path":"\/documentation\/fzswiftutils\/urlresources","title":"URLResources","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/resumabledata\/init(response:data:)","title":"init?(response: URLResponse, data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/resumabledata\/data","title":"let data: Data","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/resumabledata\/isresumedresponse(_:)","title":"static func isResumedResponse(URLResponse) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/resumabledata","title":"URLSessionResumableDataTask.ResumableData","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/countofbytesclientexpectstoreceive","title":"var countOfBytesClientExpectsToReceive: Int64","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/countofbytesclientexpectstosend","title":"var countOfBytesClientExpectsToSend: Int64","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/countofbytesexpectedtoreceive","title":"var countOfBytesExpectedToReceive: Int64","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/countofbytesexpectedtosend","title":"var countOfBytesExpectedToSend: Int64","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/countofbytesreceived","title":"var countOfBytesReceived: Int64","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/countofbytessent","title":"var countOfBytesSent: Int64","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/currentrequest","title":"var currentRequest: URLRequest?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/delegate","title":"var delegate: URLSessionTaskDelegate?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/earliestbegindate","title":"var earliestBeginDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/error","title":"var error: Error?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/originalrequest","title":"var originalRequest: URLRequest?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/prefersincrementaldelivery","title":"var prefersIncrementalDelivery: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/priority","title":"var priority: Float","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/progress","title":"var progress: Progress","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/requestupdatehandler","title":"var requestUpdateHandler: (() -> (URLRequest))?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/response","title":"var response: URLResponse?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/resumedata","title":"var resumeData: ResumableData?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/retryamount","title":"var retryAmount: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/retryinterval","title":"var retryInterval: TimeDuration?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/state","title":"var state: URLSessionTask.State","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/taskdescription","title":"var taskDescription: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/taskidentifier","title":"var taskIdentifier: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/resume()","title":"func resume()","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/suspend()","title":"func suspend()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/urlsession(_:datatask:didbecome:)-4mvx","title":"func urlSession(URLSession, dataTask: URLSessionDataTask, didBecome: URLSessionDownloadTask)","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/urlsession(_:datatask:didbecome:)-57qxw","title":"func urlSession(URLSession, dataTask: URLSessionDataTask, didBecome: URLSessionStreamTask)","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/urlsession(_:datatask:didreceive:)","title":"func urlSession(URLSession, dataTask: URLSessionDataTask, didReceive: Data)","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/urlsession(_:datatask:didreceive:completionhandler:)","title":"func urlSession(URLSession, dataTask: URLSessionDataTask, didReceive: URLResponse, completionHandler: (URLSession.ResponseDisposition) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/urlsession(_:datatask:willcacheresponse:completionhandler:)","title":"func urlSession(URLSession, dataTask: URLSessionDataTask, willCacheResponse: CachedURLResponse, completionHandler: (CachedURLResponse?) -> Void)","type":"method"}],"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/urlsessiondatadelegate-implementations","title":"URLSessionDataDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/urlsession(_:didcreatetask:)","title":"func urlSession(URLSession, didCreateTask: URLSessionTask)","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/urlsession(_:task:didcompletewitherror:)","title":"func urlSession(URLSession, task: URLSessionTask, didCompleteWithError: Error?)","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/urlsession(_:task:didfinishcollecting:)","title":"func urlSession(URLSession, task: URLSessionTask, didFinishCollecting: URLSessionTaskMetrics)","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/urlsession(_:task:didreceive:completionhandler:)","title":"func urlSession(URLSession, task: URLSessionTask, didReceive: URLAuthenticationChallenge, completionHandler: (URLSession.AuthChallengeDisposition, URLCredential?) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/urlsession(_:task:didsendbodydata:totalbytessent:totalbytesexpectedtosend:)","title":"func urlSession(URLSession, task: URLSessionTask, didSendBodyData: Int64, totalBytesSent: Int64, totalBytesExpectedToSend: Int64)","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/urlsession(_:task:neednewbodystream:)","title":"func urlSession(URLSession, task: URLSessionTask, needNewBodyStream: (InputStream?) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/urlsession(_:task:willbegindelayedrequest:completionhandler:)","title":"func urlSession(URLSession, task: URLSessionTask, willBeginDelayedRequest: URLRequest, completionHandler: (URLSession.DelayedRequestDisposition, URLRequest?) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/urlsession(_:task:willperformhttpredirection:newrequest:completionhandler:)","title":"func urlSession(URLSession, task: URLSessionTask, willPerformHTTPRedirection: HTTPURLResponse, newRequest: URLRequest, completionHandler: (URLRequest?) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/urlsession(_:taskiswaitingforconnectivity:)","title":"func urlSession(URLSession, taskIsWaitingForConnectivity: URLSessionTask)","type":"method"}],"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask\/urlsessiontaskdelegate-implementations","title":"URLSessionTaskDelegate Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/urlsessionresumabledatatask","title":"URLSessionResumableDataTask","type":"class"},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/boolcodablestrategy","title":"BoolCodableStrategy","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevaluecodablestrategy\/rawvalue","title":"RawValue","type":"associatedtype"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevaluecodablestrategy\/decode(_:)","title":"static func decode(RawValue) throws -> Date","type":"method"},{"path":"\/documentation\/fzswiftutils\/datevaluecodablestrategy\/encode(_:)","title":"static func encode(Date) -> RawValue","type":"method"}],"path":"\/documentation\/fzswiftutils\/datevaluecodablestrategy","title":"DateValueCodableStrategy","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodablestrategy\/defaultvalue-swift.associatedtype","title":"DefaultValue","type":"associatedtype"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodablestrategy\/defaultvalue-swift.type.property","title":"static var defaultValue: DefaultValue","type":"property"}],"path":"\/documentation\/fzswiftutils\/defaultcodablestrategy","title":"DefaultCodableStrategy","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/displayableenum\/localizedname-32ede","title":"var localizedName: String","type":"property"}],"title":"DisplayableEnum Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/displayableenum\/localizedname-8rr0z","title":"var localizedName: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/displayableenum\/count-4x318","title":"static var count: Int","type":"property"}],"title":"DisplayableEnum Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/displayableenum\/count-7l7j8","title":"static var count: Int","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/displayableenum\/index(of:)-9fwjk","title":"static func index(of: Self) -> Int","type":"method"}],"title":"DisplayableEnum Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/displayableenum\/index(of:)-37h3t","title":"static func index(of: Self) -> Int","type":"method"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/displayableenum\/localizedname(at:)-2dt63","title":"static func localizedName(at: Int) -> String","type":"method"}],"title":"DisplayableEnum Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/displayableenum\/localizedname(at:)-4tbhh","title":"static func localizedName(at: Int) -> String","type":"method"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/displayableenum\/value(at:)-92md5","title":"static func value(at: Int) -> Self","type":"method"}],"title":"DisplayableEnum Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/displayableenum\/value(at:)-3k5gd","title":"static func value(at: Int) -> Self","type":"method"}],"path":"\/documentation\/fzswiftutils\/displayableenum","title":"DisplayableEnum","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/expandingoutlineitem\/children","title":"var children: [any ExpandingOutlineItem]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/expandingoutlineitem\/isexpandable-6x79k","title":"var isExpandable: Bool","type":"property"}],"title":"ExpandingOutlineItem Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/expandingoutlineitem\/isexpandable-1x2dd","title":"var isExpandable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/expandingoutlineitem\/isexpanded","title":"var isExpanded: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/expandingoutlineitem\/collapseall(includingsubchildren:)","title":"func collapseAll(includingSubchildren: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/expandingoutlineitem\/expandall(includingsubchildren:)","title":"func expandAll(includingSubchildren: Bool)","type":"method"}],"path":"\/documentation\/fzswiftutils\/expandingoutlineitem","title":"ExpandingOutlineItem","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/namedescribable\/typename-swift.type.property-5y402","title":"static var typeName: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/namedescribable\/typename-swift.property-7o8yl","title":"var typeName: String","type":"property"}],"title":"NameDescribable Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/namedescribable\/typename-swift.property-2s6yx","title":"var typeName: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/namedescribable\/typename-swift.property-7o8yl","title":"var typeName: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/namedescribable\/typename-swift.type.property-5y402","title":"static var typeName: String","type":"property"}],"title":"NameDescribable Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/namedescribable\/typename-swift.type.property-2wcju","title":"static var typeName: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/namedescribable","title":"NameDescribable","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/optionalprotocol\/wrapped","title":"Wrapped","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/optionalprotocol\/optional","title":"var optional: Wrapped?","type":"property"}],"path":"\/documentation\/fzswiftutils\/optionalprotocol","title":"OptionalProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/outlineitem\/children","title":"var children: [any OutlineItem]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/outlineitem\/isexpandable-3jqi1","title":"var isExpandable: Bool","type":"property"}],"title":"OutlineItem Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/outlineitem\/isexpandable-65ml","title":"var isExpandable: Bool","type":"property"}],"path":"\/documentation\/fzswiftutils\/outlineitem","title":"OutlineItem","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/pausable\/ispaused","title":"var isPaused: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/pausable\/pause()","title":"func pause()","type":"method"},{"path":"\/documentation\/fzswiftutils\/pausable\/resume()","title":"func resume()","type":"method"}],"path":"\/documentation\/fzswiftutils\/pausable","title":"Pausable","type":"protocol"},{"path":"\/documentation\/fzswiftutils\/pausableoperation","title":"PausableOperation","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/assumeequaluntilmodified\/init(wrappedvalue:)","title":"init(wrappedValue: Wrapped)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/assumeequaluntilmodified\/wrappedvalue","title":"var wrappedValue: Wrapped","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/assumeequaluntilmodified\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/assumeequaluntilmodified\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/assumeequaluntilmodified\/isequal(_:)-4r0ly","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/assumeequaluntilmodified\/isequal(_:)-902xd","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/assumeequaluntilmodified\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/assumeequaluntilmodified\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/assumeequaluntilmodified\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/assumeequaluntilmodified","title":"AssumeEqualUntilModified","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/cgimageframe\/init(_:_:)","title":"init(CGImage, TimeInterval?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/cgimageframe\/duration","title":"var duration: TimeInterval?","type":"property"},{"path":"\/documentation\/fzswiftutils\/cgimageframe\/image","title":"var image: CGImage","type":"property"}],"path":"\/documentation\/fzswiftutils\/cgimageframe","title":"CGImageFrame","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/comparisonexpression\/modifier","title":"ComparisonExpression.Modifier","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/comparisonexpression\/operator","title":"ComparisonExpression.Operator","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/comparisonexpression\/options","title":"ComparisonExpression.Options","type":"typealias"}],"path":"\/documentation\/fzswiftutils\/comparisonexpression","title":"ComparisonExpression","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/+(_:_:)","title":"static func + (`Self`, `Self`) -> DataSize","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/+=(_:_:)","title":"static func += (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/-(_:_:)","title":"static func - (`Self`, `Self`) -> DataSize","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/-=(_:_:)","title":"static func -= (inout `Self`, `Self`)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/init(_:countstyle:)","title":"init(Int, countStyle: CountStyle)","type":"init"},{"path":"\/documentation\/fzswiftutils\/datasize\/init(petabytes:terabytes:gigabytes:megabytes:kilobytes:bytes:countstyle:)","title":"init(petabytes: Double, terabytes: Double, gigabytes: Double, megabytes: Double, kilobytes: Double, bytes: Int, countStyle: CountStyle)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/bytes","title":"var bytes: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/datasize\/countstyle-swift.property","title":"var countStyle: CountStyle","type":"property"},{"path":"\/documentation\/fzswiftutils\/datasize\/formatter","title":"var formatter: ByteCountFormatter","type":"property"},{"path":"\/documentation\/fzswiftutils\/datasize\/gigabytes","title":"var gigabytes: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/datasize\/kilobytes","title":"var kilobytes: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/datasize\/megabytes","title":"var megabytes: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/datasize\/petabytes","title":"var petabytes: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/datasize\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/datasize\/terabytes","title":"var terabytes: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/string(allowedunits:includesunit:)","title":"func string(allowedUnits: ByteCountFormatter.Units, includesUnit: Bool) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/string(for:includesunit:)","title":"func string(for: Unit, includesUnit: Bool) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/countstyle-swift.typealias","title":"DataSize.CountStyle","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/zero","title":"static var zero: DataSize","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/bytes(_:countstyle:)","title":"static func bytes(Int, countStyle: CountStyle) -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/gigabytes(_:countstyle:)","title":"static func gigabytes(Double, countStyle: CountStyle) -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/kilobytes(_:countstyle:)","title":"static func kilobytes(Double, countStyle: CountStyle) -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/megabytes(_:countstyle:)","title":"static func megabytes(Double, countStyle: CountStyle) -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/petabytes(_:countstyle:)","title":"static func petabytes(Double, countStyle: CountStyle) -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/terabytes(_:countstyle:)","title":"static func terabytes(Double, countStyle: CountStyle) -> DataSize","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/byte","title":"case byte","type":"case"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/exabyte","title":"case exabyte","type":"case"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/gigabyte","title":"case gigabyte","type":"case"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/kilobyte","title":"case kilobyte","type":"case"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/megabyte","title":"case megabyte","type":"case"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/petabyte","title":"case petabyte","type":"case"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/terabyte","title":"case terabyte","type":"case"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/yottabyte","title":"case yottabyte","type":"case"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/zettabyte","title":"case zettabyte","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/isequal(_:)-4mme7","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/isequal(_:)-7f6fm","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/datasize\/unit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/datasize\/unit\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/datasize\/unit","title":"DataSize.Unit","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/'...(_:)-49z16","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/'...(_:)-82onh","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_(_:_:)-10glf","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_(_:_:)-2di32","title":"static func < (Self, any Comparable) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_(_:_:)-4ob0y","title":"static func > (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_(_:_:)-6yy1s","title":"static func < (Self, (any Comparable)?) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_(_:_:)-fx2","title":"static func < (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_=(_:_:)-2zy0f","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_=(_:_:)-43vmd","title":"static func >= (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_=(_:_:)-493hy","title":"static func <= (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_=(_:_:)-8nkce","title":"static func <= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamp(max:)","title":"func clamp(max: Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamp(to:)","title":"func clamp(to: ClosedRange<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamped(max:)","title":"func clamped(max: Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamped(to:)","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/islessthan(_:)-1eigr","title":"func isLessThan(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/islessthan(_:)-73yyu","title":"func isLessThan((any Comparable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/islessthanorequal(_:)-3miuf","title":"func isLessThanOrEqual(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/islessthanorequal(_:)-4qrye","title":"func isLessThanOrEqual((any Comparable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/datasize\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/datasize\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/fzswiftutils\/datasize\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/datasize\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/isequal(_:)-1yhvx","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/isequal(_:)-49f95","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/datasize\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/init(integerliteral:)","title":"init(integerLiteral: Int)","type":"init"}],"path":"\/documentation\/fzswiftutils\/datasize\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/init(_:)","title":"init?(String)","type":"init"}],"path":"\/documentation\/fzswiftutils\/datasize\/losslessstringconvertible-implementations","title":"LosslessStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/datasize","title":"DataSize","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/init(wrappedvalue:)","title":"init(wrappedValue: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/wrappedvalue","title":"var wrappedValue: Date","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/fzswiftutils\/datevalue\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/datevalue\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/datevalue\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/datevalue\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/datevalue\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datevalue\/==(_:_:)","title":"static func == (DateValue<Formatter>, DateValue<Formatter>) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/isequal(_:)-4ga27","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datevalue\/isequal(_:)-5tgx9","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/datevalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/datevalue\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/datevalue","title":"DateValue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/init(wrappedvalue:)","title":"init(wrappedValue: Default.DefaultValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/wrappedvalue","title":"var wrappedValue: Default.DefaultValue","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/fzswiftutils\/defaultcodable\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/defaultcodable\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/isequal(_:)-4o19o","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/isequal(_:)-9g795","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/defaultcodable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/defaultcodable","title":"DefaultCodable","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultemptyarraystrategy\/defaultvalue","title":"static var defaultValue: [T]","type":"property"}],"path":"\/documentation\/fzswiftutils\/defaultemptyarraystrategy","title":"DefaultEmptyArrayStrategy","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultemptydictionarystrategy\/defaultvalue","title":"static var defaultValue: [Key : Value]","type":"property"}],"path":"\/documentation\/fzswiftutils\/defaultemptydictionarystrategy","title":"DefaultEmptyDictionaryStrategy","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/false\/defaultvalue","title":"static var defaultValue: Bool","type":"property"}],"path":"\/documentation\/fzswiftutils\/false","title":"False","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/application","title":"var application: ApplicationBundle?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/applicationurl","title":"var applicationURL: URL?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/contenttypes","title":"var contentTypes: [UTType]","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/iconname","title":"var iconName: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/role","title":"var role: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/applicationurl","title":"case applicationURL","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/contenttypeidentifiers","title":"case contentTypeIdentifiers","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/extensions","title":"case extensions","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/iconname","title":"case iconName","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/role","title":"case role","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/isequal(_:)-2fm9v","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/isequal(_:)-77vkd","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys","title":"FileTypeDefinition.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/filetypedefinition\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/isequal(_:)-6kd31","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/isequal(_:)-7mclk","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/filetypedefinition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/filetypedefinition","title":"FileTypeDefinition","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/iso8601strategy\/decode(_:)","title":"static func decode(String) throws -> Date","type":"method"},{"path":"\/documentation\/fzswiftutils\/iso8601strategy\/encode(_:)","title":"static func encode(Date) -> String","type":"method"}],"path":"\/documentation\/fzswiftutils\/iso8601strategy","title":"ISO8601Strategy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframe\/init(_:_:)","title":"init(NSUIImage, TimeInterval?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframe\/duration","title":"var duration: TimeInterval?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframe\/image","title":"var image: NSUIImage","type":"property"}],"path":"\/documentation\/fzswiftutils\/imageframe","title":"ImageFrame","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/init(source:type:thumbnailoptions:imageoptions:loop:)","title":"init(source: ImageSource, type: FrameType, thumbnailOptions: ThumbnailOptions?, imageOptions: ImageOptions?, loop: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/currentframe","title":"var currentFrame: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/framecount","title":"let frameCount: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/imageoptions","title":"let imageOptions: ImageOptions?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/loop","title":"let loop: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/source","title":"let source: ImageSource","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/thumbnailoptions","title":"let thumbnailOptions: ThumbnailOptions?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/type","title":"let type: FrameType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/next()","title":"func next() async -> CGImageFrame?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/image(source:options:loop:)","title":"static func image(source: ImageSource, options: ImageOptions?, loop: Bool) -> ImageFrameIterator","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/thumbnail(source:options:loop:)","title":"static func thumbnail(source: ImageSource, options: ThumbnailOptions?, loop: Bool) -> ImageFrameIterator","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/image","title":"case image","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/thumbnail","title":"case thumbnail","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/isequal(_:)-1tzb8","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/isequal(_:)-2yq79","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype","title":"ImageFrameSequence.ImageFrameIterator.FrameType","type":"enum"}],"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator","title":"ImageFrameSequence.ImageFrameIterator","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/init(_:type:imageoptions:thumbnailoptions:loop:)","title":"init(ImageSource, type: ImageType, imageOptions: ImageOptions?, thumbnailOptions: ThumbnailOptions?, loop: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageoptions-swift.property","title":"let imageOptions: ImageOptions?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/loop","title":"let loop: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/source","title":"let source: ImageSource","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/thumbnailoptions-swift.property","title":"let thumbnailOptions: ThumbnailOptions?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/type","title":"let type: ImageType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/makeasynciterator()","title":"func makeAsyncIterator() -> ImageFrameIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/element","title":"ImageFrameSequence.Element","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageoptions-swift.typealias","title":"ImageFrameSequence.ImageOptions","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/thumbnailoptions-swift.typealias","title":"ImageFrameSequence.ThumbnailOptions","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/image(_:options:loop:)","title":"static func image(ImageSource, options: ImageOptions?, loop: Bool) -> ImageFrameSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/thumbnail(_:options:loop:)","title":"static func thumbnail(ImageSource, options: ThumbnailOptions?, loop: Bool) -> ImageFrameSequence","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/image","title":"case image","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/thumbnail","title":"case thumbnail","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/isequal(_:)-3u8zl","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/isequal(_:)-4s47n","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype","title":"ImageFrameSequence.ImageType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/collect()","title":"func collect() throws -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/collect(completionhandler:)","title":"func collect(completionHandler: ([Element]) -> Void) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/compactmap(_:)-3qgq8","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/compactmap(_:)-53ulg","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/flatmap(_:)-3y4wz","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/flatmap(_:)-59q5u","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/map(_:)-2yzi1","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/map(_:)-4s1q2","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageframesequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageframesequence","title":"ImageFrameSequence","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/aspectratioinfo","title":"var aspectRatioInfo: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/cameraserialnumber","title":"var cameraSerialNumber: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/continuousdrive","title":"var continuousDrive: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/firmware","title":"var firmware: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/flashexposurecomp","title":"var flashExposureComp: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/imageserialnumber","title":"var imageSerialNumber: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/lensmodel","title":"var lensModel: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/maxaperture","title":"var maxAperture: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/minaperture","title":"var minAperture: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/ownername","title":"var ownerName: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/uniquemodelid","title":"var uniqueModelID: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/whitebalance","title":"var whiteBalance: ImageProperties.EXIF.WhiteBalance?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/canon\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/canon","title":"ImageProperties.Canon","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/bodyserialnumber","title":"var bodySerialNumber: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/brightnessvalue","title":"var brightnessValue: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/cfapattern","title":"var cFAPattern: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/cameraownername","title":"var cameraOwnerName: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/componentsconfiguration","title":"var componentsConfiguration: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/compositeimage","title":"var compositeImage: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/compressedbitsperpixel","title":"var compressedBitsPerPixel: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/contrast","title":"var contrast: Contrast?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/customrendered","title":"var customRendered: CustomRendered?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/datetimedigitized","title":"var dateTimeDigitized: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/datetimeoriginal","title":"var dateTimeOriginal: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/devicesettingdescription","title":"var deviceSettingDescription: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/digitalzoomratio","title":"var digitalZoomRatio: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/exposureindex","title":"var exposureIndex: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/exposuremode","title":"var exposureMode: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/exposureprogram","title":"var exposureProgram: ExposureProgram?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/exposuretime","title":"var exposureTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/filesource","title":"var fileSource: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/flash","title":"var flash: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/flashenergy","title":"var flashEnergy: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/flashpixversion","title":"var flashPixVersion: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/focallenin35mmfilm","title":"var focalLenIn35mmFilm: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/focalplaneresolutionunit","title":"var focalPlaneResolutionUnit: FocalPlaneResolutionUnit?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/focalplanexresolution","title":"var focalPlaneXResolution: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/focalplaneyresolution","title":"var focalPlaneYResolution: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/gaincontrol","title":"var gainControl: GainControl?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/gamma","title":"var gamma: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/isospeedlatitudeyyy","title":"var iSOSpeedLatitudeyyy: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/isospeedlatitudezzz","title":"var iSOSpeedLatitudezzz: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/imageuniqueid","title":"var imageUniqueID: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/lensserialnumber","title":"var lensSerialNumber: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/lensspecification","title":"var lensSpecification: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/lightsource","title":"var lightSource: LightSource?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/makernote","title":"var makerNote: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/maxaperturevalue","title":"var maxApertureValue: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/meteringmode","title":"var meteringMode: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/oecf","title":"var oECF: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/offsettime","title":"var offsetTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/offsettimedigitized","title":"var offsetTimeDigitized: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/offsettimeoriginal","title":"var offsetTimeOriginal: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/recommendedexposureindex","title":"var recommendedExposureIndex: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/relatedsoundfile","title":"var relatedSoundFile: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/saturation","title":"var saturation: Saturation?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/scenecapturetype","title":"var sceneCaptureType: SceneCaptureType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/scenetype","title":"var sceneType: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/sensingmethod","title":"var sensingMethod: SensingMethod?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/sensitivitytype","title":"var sensitivityType: SensitivityType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/sharpness","title":"var sharpness: Sharpness?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/sourceexposuretimesofcompositeimage","title":"var sourceExposureTimesOfCompositeImage: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/sourceimagenumberofcompositeimage","title":"var sourceImageNumberOfCompositeImage: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/spatialfrequencyresponse","title":"var spatialFrequencyResponse: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/spectralsensitivity","title":"var spectralSensitivity: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/standardoutputsensitivity","title":"var standardOutputSensitivity: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/subjectarea","title":"var subjectArea: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/subjectdistrange","title":"var subjectDistRange: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/subjectdistance","title":"var subjectDistance: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/subjectdistancerange","title":"var subjectDistanceRange: SubjectDistanceRange?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/subjectlocation","title":"var subjectLocation: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/subsectime","title":"var subsecTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/subsectimedigitized","title":"var subsecTimeDigitized: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/subsectimeoriginal","title":"var subsecTimeOriginal: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/version","title":"var version: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended\/whitebalance","title":"var whiteBalance: Double?","type":"property"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/extended","title":"ImageProperties.EXIF.Extended","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/aperture","title":"var aperture: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/colorspace","title":"var colorSpace: CGColorSpace?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/colorspacename","title":"var colorSpaceName: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/datetimeoriginal","title":"var dateTimeOriginal: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposurecompensation","title":"var exposureCompensation: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/fnumber","title":"var fNumber: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focallength","title":"var focalLength: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focallength35mm","title":"var focalLength35mm: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/isscreenshot","title":"var isScreenshot: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/isospeed","title":"var isoSpeed: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/isospeedratings","title":"var isoSpeedRatings: [Double]?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lensmaker","title":"var lensMaker: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lensmodel","title":"var lensModel: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/shutterspeed","title":"var shutterSpeed: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/usercomment","title":"var userComment: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/xdimension","title":"var xDimension: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/ydimension","title":"var yDimension: Double?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/hard","title":"case hard","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/soft","title":"case soft","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/isequal(_:)-78ufu","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/isequal(_:)-7xtne","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/contrast","title":"ImageProperties.EXIF.Contrast","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered\/customprocess","title":"case customProcess","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered\/normalprocess","title":"case normalProcess","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered\/isequal(_:)-5hiho","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered\/isequal(_:)-mwk0","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/customrendered","title":"ImageProperties.EXIF.CustomRendered","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/actionprogram","title":"case actionProgram","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/aperturepriority","title":"case aperturePriority","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/creativeprogram","title":"case creativeProgram","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/landscapemode","title":"case landscapeMode","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/manual","title":"case manual","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/normalprogram","title":"case normalProgram","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/notdefined","title":"case notDefined","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/portraitmode","title":"case portraitMode","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/shutterpriority","title":"case shutterPriority","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/isequal(_:)-1d573","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/isequal(_:)-qcln","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/exposureprogram","title":"ImageProperties.EXIF.ExposureProgram","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/autofired","title":"case autoFired","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/autofirednotreturned","title":"case autoFiredNotReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/autofiredredeye","title":"case autoFiredRedEye","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/autofiredredeyenotreturned","title":"case autoFiredRedEyeNotReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/autofiredredeyereturned","title":"case autoFiredRedEyeReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/autofiredreturned","title":"case autoFiredReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/autonotfired","title":"case autoNotFired","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/autonotfiredredeye","title":"case autoNotFiredRedEye","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/fired","title":"case fired","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/firednotreturned","title":"case firedNotReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/firedredeye","title":"case firedRedEye","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/firedredeyenotreturned","title":"case firedRedEyeNotReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/firedredeyereturned","title":"case firedRedEyeReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/firedreturned","title":"case firedReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/noflash","title":"case noFlash","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/noflashfunction","title":"case noFlashFunction","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/offnoflashfunction","title":"case offNoFlashFunction","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/offnotfired","title":"case offNotFired","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/offnotfirednotreturned","title":"case offNotFiredNotReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/offredeye","title":"case offRedEye","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/onfired","title":"case onFired","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/onnotfired","title":"case onNotFired","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/onnotreturned","title":"case onNotReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/onredeye","title":"case onRedEye","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/onredeyenotreturned","title":"case onRedEyeNotReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/onredeyereturned","title":"case onRedEyeReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/onreturned","title":"case onReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/isequal(_:)-65eiw","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/isequal(_:)-8jkbq","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/flashmode","title":"ImageProperties.EXIF.FlashMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/centimeter","title":"case centimeter","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/inch","title":"case inch","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/noabsoluteunitofmeasurement","title":"case noAbsoluteUnitOfMeasurement","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/isequal(_:)-7ajhx","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/isequal(_:)-7w1mt","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit","title":"ImageProperties.EXIF.FocalPlaneResolutionUnit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/highgaindown","title":"case highGainDown","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/highgainup","title":"case highGainUp","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/lowgaindown","title":"case lowGainDown","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/lowgainup","title":"case lowGainUp","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/isequal(_:)-269jr","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/isequal(_:)-8ek8d","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/gaincontrol","title":"ImageProperties.EXIF.GainControl","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/cloudyweather","title":"case cloudyWeather","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/coolwhitefluorescent","title":"case coolWhiteFluorescent","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/d50","title":"case d50","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/d55","title":"case d55","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/d65","title":"case d65","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/d75","title":"case d75","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/daywhitefluorescent","title":"case dayWhiteFluorescent","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/daylight","title":"case daylight","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/daylightfluorescent","title":"case daylightFluorescent","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/fineweather","title":"case fineWeather","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/flash","title":"case flash","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/fluorescent","title":"case fluorescent","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/isostudiotungsten","title":"case isoStudioTungsten","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/otherlightsource","title":"case otherLightSource","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/shade","title":"case shade","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/standardlighta","title":"case standardLightA","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/standardlightb","title":"case standardLightB","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/standardlightc","title":"case standardLightC","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/tungstenincandescentlight","title":"case tungstenIncandescentLight","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/whitefluorescent","title":"case whiteFluorescent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/isequal(_:)-9684h","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/isequal(_:)-wp6v","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/lightsource","title":"ImageProperties.EXIF.LightSource","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/average","title":"case average","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/centerweightedaverage","title":"case centerWeightedAverage","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/multispot","title":"case multiSpot","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/other","title":"case other","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/partial","title":"case partial","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/pattern","title":"case pattern","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/spot","title":"case spot","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/isequal(_:)-293qm","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/isequal(_:)-4grf0","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/meteringmode","title":"ImageProperties.EXIF.MeteringMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/highsaturation","title":"case highSaturation","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/lowsaturation","title":"case lowSaturation","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/normal","title":"case normal","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/isequal(_:)-2z7hf","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/isequal(_:)-54o8h","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/saturation","title":"ImageProperties.EXIF.Saturation","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/landscape","title":"case landscape","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/nightscene","title":"case nightScene","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/portrait","title":"case portrait","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/standard","title":"case standard","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/isequal(_:)-4xc0g","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/isequal(_:)-8thpk","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/scenecapturetype","title":"ImageProperties.EXIF.SceneCaptureType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/colorsequentialareasensor","title":"case colorSequentialAreaSensor","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/colorsequentiallinearsensor","title":"case colorSequentialLinearSensor","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/notdefined","title":"case notDefined","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/onechipcolorareasensor","title":"case oneChipColorAreaSensor","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/threechipcolorareasensor","title":"case threeChipColorAreaSensor","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/trilinearsensor","title":"case trilinearSensor","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/twochipcolorareasensor","title":"case twoChipColorAreaSensor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/isequal(_:)-1fc58","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/isequal(_:)-49u7t","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensingmethod","title":"ImageProperties.EXIF.SensingMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/isospeed","title":"case isoSpeed","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/recommendedexposureindex","title":"case recommendedExposureIndex","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/recommendedexposureindexandisospeed","title":"case recommendedExposureIndexAndISOSpeed","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/standardoutputsensitivity","title":"case standardOutputSensitivity","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/standardoutputsensitivityandisospeed","title":"case standardOutputSensitivityAndISOSpeed","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/standardoutputsensitivityandrecommendedexposureindex","title":"case standardOutputSensitivityAndRecommendedExposureIndex","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/standardoutputsensitivityandrecommendedexposureindexandisospeed","title":"case standardOutputSensitivityAndRecommendedExposureIndexAndISOSpeed","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/isequal(_:)-5kk4c","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/isequal(_:)-6rhor","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sensitivitytype","title":"ImageProperties.EXIF.SensitivityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/hard","title":"case hard","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/soft","title":"case soft","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/isequal(_:)-4cuk6","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/isequal(_:)-65l8y","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/sharpness","title":"ImageProperties.EXIF.Sharpness","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/closeview","title":"case closeView","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/distantview","title":"case distantView","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/macro","title":"case macro","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/isequal(_:)-6pysm","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/isequal(_:)-8fwx8","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/subjectdistancerange","title":"ImageProperties.EXIF.SubjectDistanceRange","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/manual","title":"case manual","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/isequal(_:)-7p7dn","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/isequal(_:)-9ewis","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/whitebalance","title":"ImageProperties.EXIF.WhiteBalance","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.struct","title":"ImageProperties.EXIF","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gif-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gif-swift.struct\/clampeddelaytime","title":"var clampedDelayTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gif-swift.struct\/delaytime","title":"var delayTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gif-swift.struct\/hasglobalcolormap","title":"var hasGlobalColorMap: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gif-swift.struct\/loopcount","title":"var loopCount: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gif-swift.struct\/unclampeddelaytime","title":"var unclampedDelayTime: Double?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gif-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gif-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gif-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gif-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gif-swift.struct","title":"ImageProperties.GIF","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altitude","title":"var altitude: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.property","title":"var altitudeRef: AltitudeRef?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/areainformation","title":"var areaInformation: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/coordinate","title":"var coordinate: CLLocationCoordinate2D?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/dop","title":"var dOP: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/datestamp","title":"var dateStamp: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/destbearing","title":"var destBearing: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/destbearingref","title":"var destBearingRef: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/destdistance","title":"var destDistance: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/destdistanceref","title":"var destDistanceRef: DistanceRef?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/destlatitude","title":"var destLatitude: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/destlatituderef","title":"var destLatitudeRef: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/destlongitude","title":"var destLongitude: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/destlongituderef","title":"var destLongitudeRef: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/differental","title":"var differental: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/hpositioningerror","title":"var hPositioningError: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/imgdirection","title":"var imgDirection: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/imgdirectionref","title":"var imgDirectionRef: DirectionRef?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latitude","title":"var latitude: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.property","title":"var latitudeRef: LatitudeRef?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/location","title":"var location: CLLocation?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longitude","title":"var longitude: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.property","title":"var longitudeRef: LongitudeRef?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/mapdatum","title":"var mapDatum: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.property","title":"var measureMode: MeasureMode?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/processingmethod","title":"var processingMethod: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/satellites","title":"var satellites: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speed","title":"var speed: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.property","title":"var speedRef: SpeedRef?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.property","title":"var status: Status?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/timestamp","title":"var timeStamp: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/track","title":"var track: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/trackref","title":"var trackRef: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/version","title":"var version: [Double]?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum\/abovesealevel","title":"case aboveSeaLevel","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum\/belowsealevel","title":"case belowSeaLevel","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum\/isequal(_:)-4lvy9","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum\/isequal(_:)-6ipsm","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/altituderef-swift.enum","title":"ImageProperties.GPS.AltitudeRef","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref\/magneticdirection","title":"case magneticDirection","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref\/truedirection","title":"case trueDirection","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref\/isequal(_:)-2ft0k","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref\/isequal(_:)-34vpm","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/directionref","title":"ImageProperties.GPS.DirectionRef","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/kilometers","title":"case kilometers","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/knots","title":"case knots","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/miles","title":"case miles","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/isequal(_:)-13l05","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/isequal(_:)-1hlln","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/distanceref","title":"ImageProperties.GPS.DistanceRef","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum\/north","title":"case north","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum\/south","title":"case south","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum\/isequal(_:)-4p2g1","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum\/isequal(_:)-9r0wo","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/latituderef-swift.enum","title":"ImageProperties.GPS.LatitudeRef","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum\/east","title":"case east","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum\/west","title":"case west","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum\/isequal(_:)-5lv67","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum\/isequal(_:)-8rpdr","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/longituderef-swift.enum","title":"ImageProperties.GPS.LongitudeRef","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum\/threedimensional","title":"case threeDimensional","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum\/twodimensional","title":"case twoDimensional","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum\/isequal(_:)-1x3ea","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum\/isequal(_:)-6qro6","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/measuremode-swift.enum","title":"ImageProperties.GPS.MeasureMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/kilometersperhour","title":"case kilometersPerHour","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/knots","title":"case knots","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/milesperhour","title":"case milesPerHour","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/isequal(_:)-1kam1","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/isequal(_:)-s6kd","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/speedref-swift.enum","title":"ImageProperties.GPS.SpeedRef","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum\/active","title":"case active","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum\/void","title":"case void","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum\/isequal(_:)-4c4jh","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum\/isequal(_:)-84w8d","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/status-swift.enum","title":"ImageProperties.GPS.Status","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/gps","title":"ImageProperties.GPS","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/heic-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/heic-swift.struct\/canvaspixelheight","title":"var canvasPixelHeight: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/heic-swift.struct\/canvaspixelsize","title":"var canvasPixelSize: CGSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/heic-swift.struct\/canvaspixelwidth","title":"var canvasPixelWidth: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/heic-swift.struct\/clampeddelaytime","title":"var clampedDelayTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/heic-swift.struct\/delaytime","title":"var delayTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/heic-swift.struct\/loopcount","title":"var loopCount: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/heic-swift.struct\/unclampeddelaytime","title":"var unclampedDelayTime: Double?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/heic-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/heic-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/heic-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/heic-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/heic-swift.struct","title":"ImageProperties.HEIC","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/iptc-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/iptc-swift.struct\/orientation","title":"var orientation: Orientation?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/iptc-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/iptc-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/iptc-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/iptc-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/iptc-swift.struct","title":"ImageProperties.IPTC","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/jpeg-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/jpeg-swift.struct\/densityunit","title":"var densityUnit: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/jpeg-swift.struct\/isprogressive","title":"var isProgressive: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/jpeg-swift.struct\/orientation","title":"var orientation: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/jpeg-swift.struct\/version","title":"var version: [Int]?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/jpeg-swift.struct\/xdensity","title":"var xDensity: CGFloat?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/jpeg-swift.struct\/ydensity","title":"var yDensity: CGFloat?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/jpeg-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/jpeg-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/jpeg-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/jpeg-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/jpeg-swift.struct","title":"ImageProperties.JPEG","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/init(rawvalue:)","title":"init(rawValue: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/rawvalue","title":"let rawValue: Int32","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/d","title":"static let D: ImageProperties.Nikon.LensType","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/g","title":"static let G: ImageProperties.Nikon.LensType","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/mf","title":"static let MF: ImageProperties.Nikon.LensType","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/vr","title":"static let VR: ImageProperties.Nikon.LensType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/isequal(_:)-2176h","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/isequal(_:)-62d7n","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/contains(all:)","title":"func contains(all: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/contains(any:)","title":"func contains(any: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/elements()","title":"func elements() -> AnySequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.struct","title":"ImageProperties.Nikon.LensType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/init(rawvalue:)","title":"init(rawValue: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/rawvalue","title":"let rawValue: Int32","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/autoiso","title":"static let autoISO: ImageProperties.Nikon.ShootingMode","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/continuous","title":"static let continuous: ImageProperties.Nikon.ShootingMode","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/dlightingbracketing","title":"static let dLightingBracketing: ImageProperties.Nikon.ShootingMode","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/delay","title":"static let delay: ImageProperties.Nikon.ShootingMode","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/exposurebracketing","title":"static let exposureBracketing: ImageProperties.Nikon.ShootingMode","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/ircontrol","title":"static let irControl: ImageProperties.Nikon.ShootingMode","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/pccontrol","title":"static let pcControl: ImageProperties.Nikon.ShootingMode","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/selftimer","title":"static let selfTimer: ImageProperties.Nikon.ShootingMode","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/whitebalancebracketing","title":"static let whiteBalanceBracketing: ImageProperties.Nikon.ShootingMode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/isequal(_:)-414g3","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/isequal(_:)-6y4uw","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/contains(all:)","title":"func contains(all: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/contains(any:)","title":"func contains(any: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/elements()","title":"func elements() -> AnySequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.struct","title":"ImageProperties.Nikon.ShootingMode","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/cameraserialnumber","title":"var cameraSerialNumber: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/colormode","title":"var colorMode: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/digitalzoom","title":"var digitalZoom: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/flashexposurecomp","title":"var flashExposureComp: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/flashsetting","title":"var flashSetting: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/focusdistance","title":"var focusDistance: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/focusmode","title":"var focusMode: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/isoselection","title":"var iSOSelection: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/isosetting","title":"var iSOSetting: [Int]?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/imageadjustment","title":"var imageAdjustment: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lensadapter","title":"var lensAdapter: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lensinfo","title":"var lensInfo: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/lenstype-swift.property","title":"var lensType: LensType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/quality","title":"var quality: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/sharpenmode","title":"var sharpenMode: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shootingmode-swift.property","title":"var shootingMode: ShootingMode?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/shuttercount","title":"var shutterCount: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/whitebalancemode","title":"var whiteBalanceMode: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/nikon","title":"ImageProperties.Nikon","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/init(rawvalue:)","title":"init(rawValue: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/rawvalue","title":"let rawValue: Int32","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/isequal(_:)-1196t","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/isequal(_:)-2l17h","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/contains(all:)","title":"func contains(all: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/contains(any:)","title":"func contains(any: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/elements()","title":"func elements() -> AnySequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct","title":"ImageProperties.PNG.Extended.CompressionFilter","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/author","title":"var author: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/canvaspixelheight","title":"var canvasPixelHeight: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/canvaspixelsize","title":"var canvasPixelSize: CGSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/canvaspixelwidth","title":"var canvasPixelWidth: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/chromaticities","title":"var chromaticities: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/comment","title":"var comment: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.property","title":"var compressionFilter: CompressionFilter?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/copyright","title":"var copyright: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/creationtime","title":"var creationTime: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/disclaimer","title":"var disclaimer: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/frameinfo","title":"var frameInfo: [String]?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/gamma","title":"var gamma: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.property","title":"var interlaceType: InterlaceType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/modificationtime","title":"var modificationTime: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/pixelsaspectratio","title":"var pixelsAspectRatio: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/profilename","title":"var profileName: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.property","title":"var sRGBIntent: sRGBIntent?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/software","title":"var software: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/warning","title":"var warning: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/xpixelspermeter","title":"var xPixelsPerMeter: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/ypixelspermeter","title":"var yPixelsPerMeter: Double?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/adam7interlace","title":"case adam7Interlace","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/noninterlaced","title":"case nonInterlaced","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/isequal(_:)-43ex2","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/isequal(_:)-8ounb","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum","title":"ImageProperties.PNG.Extended.InterlaceType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/absolutecolorimetric","title":"case absoluteColorimetric","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/perceptual","title":"case perceptual","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/relativecolorimetric","title":"case relativeColorimetric","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/saturation","title":"case saturation","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/isequal(_:)-19evj","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/isequal(_:)-4mi0k","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum","title":"ImageProperties.PNG.Extended.sRGBIntent","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/extended","title":"ImageProperties.PNG.Extended","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/clampeddelaytime","title":"var clampedDelayTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/delaytime","title":"var delayTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/loopcount","title":"var loopCount: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/unclampeddelaytime","title":"var unclampedDelayTime: Double?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.struct","title":"ImageProperties.PNG","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/artist","title":"var artist: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/compression","title":"var compression: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/copyright","title":"var copyright: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/documentname","title":"var documentName: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/hostcomputer","title":"var hostComputer: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/imagedescription","title":"var imageDescription: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/photometricinterpretation","title":"var photometricInterpretation: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/primarychromaticities","title":"var primaryChromaticities: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/resolutionunit","title":"var resolutionUnit: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/software","title":"var software: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/tilelength","title":"var tileLength: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/tilewidth","title":"var tileWidth: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/transferfunction","title":"var transferFunction: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/whitepoint","title":"var whitePoint: Double?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/extended","title":"ImageProperties.TIFF.Extended","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/cameramaker","title":"var cameraMaker: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/cameramodel","title":"var cameraModel: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/orientation","title":"var orientation: Orientation?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/timestamp","title":"var timestamp: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/xresolution","title":"var xResolution: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/yresolution","title":"var yResolution: Int?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.struct","title":"ImageProperties.TIFF","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/clampeddelaytime","title":"var clampedDelayTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/colormodel","title":"var colorModel: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/colorprofile","title":"var colorProfile: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/delaytime","title":"var delayTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/depth","title":"var depth: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/dpiheight","title":"var dpiHeight: CGFloat?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/dpisize","title":"var dpiSize: CGSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/dpiwidth","title":"var dpiWidth: CGFloat?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/exif-swift.property","title":"var exif: EXIF?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/filesize","title":"var fileSize: DataSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/gif-swift.property","title":"var gif: GIF?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/hasalpha","title":"var hasAlpha: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/heic-swift.property","title":"var heic: HEIC?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/iptc-swift.property","title":"var iptc: IPTC?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/isscreenshot","title":"var isScreenshot: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/jpeg-swift.property","title":"var jpeg: JPEG?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/loopcount","title":"var loopCount: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.property","title":"var orientation: Orientation","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/pixelheight","title":"var pixelHeight: CGFloat?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/pixelsize","title":"var pixelSize: CGSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/pixelwidth","title":"var pixelWidth: CGFloat?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/png-swift.property","title":"var png: PNG?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/shape-swift.property","title":"var shape: Shape?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tiff-swift.property","title":"var tiff: TIFF?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/unclampeddelaytime","title":"var unclampedDelayTime: Double?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/down","title":"case down","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/downmirrored","title":"case downMirrored","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/left","title":"case left","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/leftmirrored","title":"case leftMirrored","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/right","title":"case right","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/rightmirrored","title":"case rightMirrored","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/up","title":"case up","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/upmirrored","title":"case upMirrored","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/isequal(_:)-3q60h","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/isequal(_:)-nqcl","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/orientation-swift.enum","title":"ImageProperties.Orientation","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/shape-swift.enum\/landscape","title":"case landscape","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/shape-swift.enum\/portrait","title":"case portrait","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/shape-swift.enum\/square","title":"case square","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/shape-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/shape-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/shape-swift.enum\/isequal(_:)-1i6kb","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/shape-swift.enum\/isequal(_:)-8hema","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/shape-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/shape-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/shape-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/shape-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/shape-swift.enum","title":"ImageProperties.Shape","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageproperties\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageproperties\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageproperties","title":"ImageProperties","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/init(_:separator:allowemptyslices:)","title":"init(Base, separator: Base.Element, allowEmptySlices: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/allowemptyslices","title":"let allowEmptySlices: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/remaining","title":"var remaining: Base.SubSequence?","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/separator","title":"let separator: Base.Element","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/next()","title":"func next() -> Base.SubSequence?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/elements","title":"var elements: Self","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/lazy-22kp","title":"var lazy: Self.Elements","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/lazy-4ft2c","title":"var lazy: LazySequence<Self.Elements>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/compactmap(_:)-4k1cp","title":"func compactMap<ElementOfResult>((Self.Elements.Element) -> ElementOfResult?) -> LazyMapSequence<LazyFilterSequence<LazyMapSequence<Self.Elements, ElementOfResult?>>, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/drop(while:)","title":"func drop(while: (Self.Elements.Element) -> Bool) -> LazyDropWhileSequence<Self.Elements>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/filter(_:)","title":"func filter((Self.Elements.Element) -> Bool) -> LazyFilterSequence<Self.Elements>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/flatmap(_:)-3fu61","title":"func flatMap<ElementOfResult>((Self.Elements.Element) -> ElementOfResult?) -> LazyMapSequence<LazyFilterSequence<LazyMapSequence<Self.Elements, ElementOfResult?>>, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/flatmap(_:)-5jcvl","title":"func flatMap<SegmentOfResult>((Self.Elements.Element) -> SegmentOfResult) -> LazySequence<FlattenSequence<LazyMapSequence<Self.Elements, SegmentOfResult>>>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/joined()","title":"func joined() -> LazySequence<FlattenSequence<Self.Elements>>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/map(_:)-2lbf4","title":"func map<U>((Self.Element) -> U) -> LazyMapSequence<Self.Elements, U>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/prefix(while:)","title":"func prefix(while: (Self.Elements.Element) -> Bool) -> LazyPrefixWhileSequence<Self.Elements>","type":"method"}],"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/lazysequenceprotocol-implementations","title":"LazySequenceProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/lazy-9jlnw","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/collect(completionhandler:)","title":"func collect(completionHandler: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/compactmap(_:)-43f32","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/compactmap(_:)-73twm","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/compactmap(_:)-jazp","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentcompactmap(withpriority:_:)-3b234","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentcompactmap(withpriority:_:)-727qg","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentflatmap(withpriority:_:)-6cnyn","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentflatmap(withpriority:_:)-7gjnh","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentmap(withpriority:_:)-egue","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentmap(withpriority:_:)-fllb","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/contains(_:)-3inng","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/contains(_:)-8jyvt","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/contains(all:)","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/contains(any:)","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/fill(using:)-2qg63","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/fill(using:)-7c9z0","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/fill(using:)-9ajih","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/flatmap(_:)-4ezqd","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/flatmap(_:)-4pmju","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/flatmap(_:)-7nr0q","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/indexes(of:)","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/joined(by:)","title":"func joined(by: String.JoinOptions) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/joined(separator:)-4flv","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/joined(separator:)-ecq8","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/makeiterator()","title":"func makeIterator() -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/map(_:)-2tzot","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/map(_:)-8bk39","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/randomelement(excluding:)","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:_:)-28cw9","title":"func sorted<T>(by: (Element) -> T, SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:_:)-53orb","title":"func sorted<T>(by: KeyPath<Element, T>, SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:_:)-7kp5k","title":"func sorted<T>(by: KeyPath<Element, T?>, SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:order:)","title":"func sorted(by: PartialKeyPath<Element>..., order: SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(using:)-1l080","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(using:)-9c6wu","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/uniqued(by:)-3b0mf","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/uniqued(by:)-45vxr","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/lazysplitsequence","title":"LazySplitSequence","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/oshash\/init(data:)","title":"init(data: Data) throws","type":"init"},{"path":"\/documentation\/fzswiftutils\/oshash\/init(path:)","title":"init(path: String) throws","type":"init"},{"path":"\/documentation\/fzswiftutils\/oshash\/init(url:)","title":"init(url: URL) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/oshash\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/oshash\/blockbytecount","title":"static let blockByteCount: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/oshash\/bytecount","title":"static let byteCount: Int","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/invalidfile","title":"case invalidFile","type":"case"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/tosmall","title":"case toSmall","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/isequal(_:)-5dfco","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/isequal(_:)-7wifm","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/oshash\/errors\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/oshash\/errors\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/oshash\/errors","title":"OSHash.Errors","type":"enum"}],"path":"\/documentation\/fzswiftutils\/oshash","title":"OSHash","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsortingkeypath\/ascending(_:)-7otqn","title":"static func ascending([PartialKeyPath<Root>]) -> PartialSortingKeyPath<Root>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsortingkeypath\/ascending(_:)-9c08r","title":"static func ascending(PartialKeyPath<Root>...) -> PartialSortingKeyPath<Root>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsortingkeypath\/descending(_:)-1f1r7","title":"static func descending([PartialKeyPath<Root>]) -> PartialSortingKeyPath<Root>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsortingkeypath\/descending(_:)-53ow3","title":"static func descending(PartialKeyPath<Root>...) -> PartialSortingKeyPath<Root>","type":"method"}],"path":"\/documentation\/fzswiftutils\/partialsortingkeypath","title":"PartialSortingKeyPath","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/init(_:separator:)","title":"init(() -> Base?, separator: Base.Element)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/next()","title":"func next() -> Base.SubSequence?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/elements","title":"var elements: Self","type":"property"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/lazy-7447d","title":"var lazy: Self.Elements","type":"property"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/lazy-7vchg","title":"var lazy: LazySequence<Self.Elements>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/compactmap(_:)-608h0","title":"func compactMap<ElementOfResult>((Self.Elements.Element) -> ElementOfResult?) -> LazyMapSequence<LazyFilterSequence<LazyMapSequence<Self.Elements, ElementOfResult?>>, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/drop(while:)","title":"func drop(while: (Self.Elements.Element) -> Bool) -> LazyDropWhileSequence<Self.Elements>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/filter(_:)","title":"func filter((Self.Elements.Element) -> Bool) -> LazyFilterSequence<Self.Elements>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/flatmap(_:)-4o667","title":"func flatMap<SegmentOfResult>((Self.Elements.Element) -> SegmentOfResult) -> LazySequence<FlattenSequence<LazyMapSequence<Self.Elements, SegmentOfResult>>>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/flatmap(_:)-9149f","title":"func flatMap<ElementOfResult>((Self.Elements.Element) -> ElementOfResult?) -> LazyMapSequence<LazyFilterSequence<LazyMapSequence<Self.Elements, ElementOfResult?>>, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/joined()","title":"func joined() -> LazySequence<FlattenSequence<Self.Elements>>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/map(_:)-58rnd","title":"func map<U>((Self.Element) -> U) -> LazyMapSequence<Self.Elements, U>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/prefix(while:)","title":"func prefix(while: (Self.Elements.Element) -> Bool) -> LazyPrefixWhileSequence<Self.Elements>","type":"method"}],"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/lazysequenceprotocol-implementations","title":"LazySequenceProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/lazy-4pe1e","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/collect(completionhandler:)","title":"func collect(completionHandler: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/compactmap(_:)-4dpth","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/compactmap(_:)-9cekf","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/compactmap(_:)-9juoh","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentcompactmap(withpriority:_:)-40ioq","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentcompactmap(withpriority:_:)-49k0m","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentflatmap(withpriority:_:)-6xzro","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentflatmap(withpriority:_:)-zg2q","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentmap(withpriority:_:)-12sb0","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentmap(withpriority:_:)-1x09b","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/contains(_:)-9aqrd","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/contains(_:)-o03n","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/contains(all:)","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/contains(any:)","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/fill(using:)-2wia3","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/fill(using:)-7ming","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/fill(using:)-98q9n","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/flatmap(_:)-24dvh","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/flatmap(_:)-3o3hs","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/flatmap(_:)-4jnrk","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/indexes(of:)","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/joined(by:)","title":"func joined(by: String.JoinOptions) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/joined(separator:)-594tb","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/joined(separator:)-p074","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/makeiterator()","title":"func makeIterator() -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/map(_:)-3nt7v","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/map(_:)-9m84w","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/randomelement(excluding:)","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:_:)-16ezg","title":"func sorted<T>(by: KeyPath<Element, T>, SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:_:)-3opm3","title":"func sorted<T>(by: (Element) -> T, SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:_:)-3z4mx","title":"func sorted<T>(by: KeyPath<Element, T?>, SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:order:)","title":"func sorted(by: PartialKeyPath<Element>..., order: SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(using:)-1wifl","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(using:)-8qmtc","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortingOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/uniqued(by:)-4mvft","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/uniqued(by:)-5c645","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence","title":"PartialSourceLazySplitSequence","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/stringmatch\/range","title":"let range: Range<String.Index>","type":"property"},{"path":"\/documentation\/fzswiftutils\/stringmatch\/score","title":"let score: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/stringmatch\/string","title":"let string: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/stringmatch\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/stringmatch\/isequal(_:)-5byt7","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/stringmatch\/isequal(_:)-6jjdi","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/stringmatch\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/stringmatch","title":"StringMatch","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swizzlaepair\/init(old:new:static:)","title":"init(old: Selector, new: Selector, static: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swizzlaepair\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/swizzlaepair\/new","title":"let new: Selector","type":"property"},{"path":"\/documentation\/fzswiftutils\/swizzlaepair\/old","title":"let old: Selector","type":"property"},{"path":"\/documentation\/fzswiftutils\/swizzlaepair\/static","title":"let `static`: Bool","type":"property"}],"path":"\/documentation\/fzswiftutils\/swizzlaepair","title":"SwizzlaePair","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swizzle\/init(_:_:)-1w6k0","title":"init(AnyClass, () -> SwizzlaePair) throws","type":"init"},{"path":"\/documentation\/fzswiftutils\/swizzle\/init(_:_:)-2ww59","title":"init(String, () -> [SwizzlaePair]) throws","type":"init"},{"path":"\/documentation\/fzswiftutils\/swizzle\/init(_:_:)-4o0o9","title":"init(String, () -> SwizzlaePair) throws","type":"init"},{"path":"\/documentation\/fzswiftutils\/swizzle\/init(_:_:)-7iifa","title":"init(AnyClass, () -> [SwizzlaePair]) throws","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swizzle\/builder\/buildblock(_:)","title":"static func buildBlock(SwizzlaePair...) -> [SwizzlaePair]","type":"method"}],"path":"\/documentation\/fzswiftutils\/swizzle\/builder","title":"Swizzle.Builder","type":"enum"}],"path":"\/documentation\/fzswiftutils\/swizzle","title":"Swizzle","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/init(rawvalue:)","title":"init(rawValue: UInt)","type":"init"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/init(unit:)","title":"init(unit: Unit)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/rawvalue","title":"let rawValue: UInt","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/all","title":"static let all: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/allcompact","title":"static let allCompact: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/alldetailed","title":"static let allDetailed: Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/day","title":"static let day: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/hour","title":"static let hour: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/millisecond","title":"static let millisecond: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/minute","title":"static let minute: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/month","title":"static let month: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/nanosecond","title":"static let nanoSecond: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/second","title":"static let second: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/week","title":"static let week: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/year","title":"static let year: TimeDuration.Units","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/isequal(_:)-4yqh9","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/isequal(_:)-73csj","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/units\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/contains(all:)","title":"func contains(all: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/contains(any:)","title":"func contains(any: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/elements()","title":"func elements() -> AnySequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/units\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/units\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/timeduration\/units","title":"TimeDuration.Units","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/+=(_:_:)-3uwh9","title":"static func += (inout `Self`, Double)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/init(_:)-3wm2l","title":"init(Double)","type":"init"},{"path":"\/documentation\/fzswiftutils\/timeduration\/init(_:)-65u3c","title":"init(CMTime)","type":"init"},{"path":"\/documentation\/fzswiftutils\/timeduration\/init(dateinterval:)","title":"init(dateInterval: DateInterval)","type":"init"},{"path":"\/documentation\/fzswiftutils\/timeduration\/init(nanoseconds:milliseconds:seconds:minutes:hours:days:weeks:months:years:)","title":"init(nanoseconds: Double, milliseconds: Double, seconds: Double, minutes: Double, hours: Double, days: Double, weeks: Double, months: Double, years: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/days","title":"var days: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/hours","title":"var hours: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/milliseconds","title":"var milliseconds: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/minutes","title":"var minutes: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/months","title":"var months: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/nanoseconds","title":"var nanoseconds: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/seconds","title":"var seconds: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/stringcompact","title":"var stringCompact: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/weeks","title":"var weeks: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/years","title":"var years: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/enddate(start:)","title":"func endDate(start: Date) -> Date","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/startdate(end:)","title":"func startDate(end: Date) -> Date","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/string(allowedunits:style:)","title":"func string(allowedUnits: Units, style: DateComponentsFormatter.UnitsStyle) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/string(for:style:)","title":"func string(for: Unit, style: DateComponentsFormatter.UnitsStyle) -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/zero-37y90","title":"static var zero: TimeDuration","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/days(_:)","title":"static func days(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/hours(_:)","title":"static func hours(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/milliseconds(_:)","title":"static func milliseconds(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/minutes(_:)","title":"static func minutes(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/months(_:)","title":"static func months(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/nanoseconds(_:)","title":"static func nanoseconds(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/seconds(_:)","title":"static func seconds(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/weeks(_:)","title":"static func weeks(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/years(_:)","title":"static func years(Double) -> TimeDuration","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/seconds","title":"case seconds","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/isequal(_:)-20jz5","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/isequal(_:)-gpny","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys","title":"TimeDuration.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/day","title":"case day","type":"case"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/hour","title":"case hour","type":"case"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/millisecond","title":"case millisecond","type":"case"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/minute","title":"case minute","type":"case"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/month","title":"case month","type":"case"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/nanosecond","title":"case nanoSecond","type":"case"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/second","title":"case second","type":"case"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/week","title":"case week","type":"case"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/year","title":"case year","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/isequal(_:)-5fh3q","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/isequal(_:)-9n95l","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/timeduration\/unit","title":"TimeDuration.Unit","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/+(_:_:)","title":"static func + (`Self`, `Self`) -> TimeDuration","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/+=(_:_:)-3zzce","title":"static func += (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/+=(_:_:)-7xz04","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/-(_:_:)","title":"static func - (`Self`, `Self`) -> TimeDuration","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/-=(_:_:)-79gzv","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/-=(_:_:)-8ess3","title":"static func -= (inout `Self`, `Self`)","type":"op"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/zero-3ajg3","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/fzswiftutils\/timeduration\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/'...(_:)-3wjvb","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/'...(_:)-5anev","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_(_:_:)-2dzek","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_(_:_:)-3rl9b","title":"static func > (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_(_:_:)-75re3","title":"static func < (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_(_:_:)-791ub","title":"static func < (Self, (any Comparable)?) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_(_:_:)-8fda6","title":"static func < (Self, any Comparable) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_=(_:_:)-3xdkl","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_=(_:_:)-450p7","title":"static func <= (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_=(_:_:)-4azk3","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_=(_:_:)-ypsw","title":"static func >= (`Self`, `Self`) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/clamp(max:)","title":"func clamp(max: Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/clamp(to:)","title":"func clamp(to: ClosedRange<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/clamped(max:)","title":"func clamped(max: Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/clamped(to:)","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/islessthan(_:)-27dgc","title":"func isLessThan(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/islessthan(_:)-87r51","title":"func isLessThan((any Comparable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/islessthanorequal(_:)-6c02u","title":"func isLessThanOrEqual(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/islessthanorequal(_:)-81dwc","title":"func isLessThanOrEqual((any Comparable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/timeduration\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/fzswiftutils\/timeduration\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/*(_:_:)","title":"static func * (TimeDuration, Int) -> TimeDuration","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/*=(_:_:)","title":"static func *= (inout Self, Int)","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/\/(_:_:)-7i12i","title":"static func \/ (TimeDuration, TimeDuration) -> Double","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/\/(_:_:)-9meu8","title":"static func \/ (TimeDuration, Int) -> TimeDuration","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/\/=(_:_:)","title":"static func \/= (inout Self, Int)","type":"op"}],"path":"\/documentation\/fzswiftutils\/timeduration\/durationprotocol-implementations","title":"DurationProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/isequal(_:)-2ymkz","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/isequal(_:)-7tq5o","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/init(floatliteral:)","title":"init(floatLiteral: Double)","type":"init"}],"path":"\/documentation\/fzswiftutils\/timeduration\/expressiblebyfloatliteral-implementations","title":"ExpressibleByFloatLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/init(integerliteral:)","title":"init(integerLiteral: Int)","type":"init"}],"path":"\/documentation\/fzswiftutils\/timeduration\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/timeduration","title":"TimeDuration","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timestampstrategy\/decode(_:)","title":"static func decode(TimeInterval) throws -> Date","type":"method"},{"path":"\/documentation\/fzswiftutils\/timestampstrategy\/encode(_:)","title":"static func encode(Date) -> TimeInterval","type":"method"}],"path":"\/documentation\/fzswiftutils\/timestampstrategy","title":"TimestampStrategy","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/true\/defaultvalue","title":"static var defaultValue: Bool","type":"property"}],"path":"\/documentation\/fzswiftutils\/true","title":"True","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/yearmonthdaystrategy\/decode(_:)","title":"static func decode(String) throws -> Date","type":"method"},{"path":"\/documentation\/fzswiftutils\/yearmonthdaystrategy\/encode(_:)","title":"static func encode(Date) -> String","type":"method"}],"path":"\/documentation\/fzswiftutils\/yearmonthdaystrategy","title":"YearMonthDayStrategy","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/zero\/defaultvalue","title":"static var defaultValue: Int","type":"property"}],"path":"\/documentation\/fzswiftutils\/zero","title":"Zero","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/getassociatedvalue(key:object:)","title":"func getAssociatedValue<T>(key: String, object: AnyObject) -> T?","type":"func"},{"path":"\/documentation\/fzswiftutils\/getassociatedvalue(key:object:initialvalue:)-11x88","title":"func getAssociatedValue<T>(key: String, object: AnyObject, initialValue: () -> T) -> T","type":"func"},{"path":"\/documentation\/fzswiftutils\/getassociatedvalue(key:object:initialvalue:)-3xhj0","title":"func getAssociatedValue<T>(key: String, object: AnyObject, initialValue: () -> T) -> T","type":"func"},{"path":"\/documentation\/fzswiftutils\/getenumcasename(for:)","title":"func getEnumCaseName<T>(for: T) -> String?","type":"func"},{"path":"\/documentation\/fzswiftutils\/set(associatedvalue:key:object:)","title":"func set<T>(associatedValue: T?, key: String, object: AnyObject)","type":"func"},{"path":"\/documentation\/fzswiftutils\/set(weakassociatedvalue:key:object:)","title":"func set<T>(weakAssociatedValue: T?, key: String, object: AnyObject)","type":"func"},{"path":"\/documentation\/fzswiftutils\/synchronized(_:_:)","title":"func synchronized<T>(Any, () throws -> T) rethrows -> T","type":"func"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/!(_:)-7hkh3","title":"func ! (NSPredicate) -> NSPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/!(_:)-brwy","title":"func ! <Root>((Root) -> Bool) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/!=(_:_:)-5emrz","title":"func != <C, R>(KeyPath<R, C?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/!=(_:_:)-5ws46","title":"func != (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/!=(_:_:)-7p3rz","title":"func != <C, R>(KeyPath<R, C>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/!=(_:_:)-8d5cl","title":"func != <C, R>(KeyPath<R, C?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/!=(_:_:)-92966","title":"func != <Root, Value>((Root) -> Value, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/!=(_:_:)-9a5p1","title":"func != <C, R>(KeyPath<R, C>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/!==(_:_:)-42wmy","title":"func !== <C, R, V>(KeyPath<R, C>, V) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/!==(_:_:)-65esh","title":"func !== (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/!==(_:_:)-87u3b","title":"func !== <C, R, V>(KeyPath<R, C?>, V) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/!==(_:_:)-99dhk","title":"func !== <C, R, V>(KeyPath<R, C?>, V) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/!==(_:_:)-9orbp","title":"func !== <C, R, V>(KeyPath<R, C>, V) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/&&(_:_:)-13fah","title":"func && <Root>((Root) -> Bool, () -> Bool) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/&&(_:_:)-1d9kl","title":"func && (NSPredicate, NSPredicate) -> NSCompoundPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/&&(_:_:)-2dpi","title":"func && <Root>((Root) -> Bool, (Root) -> Bool) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/&&(_:_:)-4v0p","title":"func && <Root>(() -> Bool, (Root) -> Bool) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-214ij","title":"func *=* <R, C>(KeyPath<R, String?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-3qvh3","title":"func *=* <R>(KeyPath<R, String?>, String) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-47rwl","title":"func *=* (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-4frcj","title":"func *=* <R>(KeyPath<R, String>, String) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-5n82","title":"func *=* <R, C>(KeyPath<R, String>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-6jp9s","title":"func *=* <R, C>(KeyPath<R, String?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-7y8dy","title":"func *=* <R, C>(KeyPath<R, String>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-8q5q9","title":"func *=* <R>(KeyPath<R, String?>, String) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-f2y7","title":"func *=* <R>(KeyPath<R, String>, String) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-1eune","title":"func *== <R>(KeyPath<R, String?>, String) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-387tb","title":"func *== <R, C>(KeyPath<R, String>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-3m7co","title":"func *== <R>(KeyPath<R, String>, String) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-7ltou","title":"func *== <R>(KeyPath<R, String>, String) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-7r8cv","title":"func *== <R, C>(KeyPath<R, String?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-8nzt1","title":"func *== (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-9o1j9","title":"func *== <R>(KeyPath<R, String?>, String) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-9wiur","title":"func *== <R, C>(KeyPath<R, String>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-woli","title":"func *== <R, C>(KeyPath<R, String?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/+(_:_:)","title":"func + <Key, Value>([Key : Value], [Key : Value]) -> [Key : Value]","type":"op"},{"path":"\/documentation\/fzswiftutils\/+=(_:_:)","title":"func += <Key, Value>(inout [Key : Value], [Key : Value])","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-15wfk","title":"func == <Root, Value>((Root) -> Value, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-1icw9","title":"func == <C, R>(KeyPath<R, C?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-27f2u","title":"func == <Root, Value>((Root) -> Value, (Value, Value)) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-3e34g","title":"func == <C, R, V>(KeyPath<R, C?>, V) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-3yye3","title":"func == <C, R>(KeyPath<R, C>, ClosedRange<C>) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-4126e","title":"func == <C, R, V>(KeyPath<R, C>, V) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-7mhn6","title":"func == <C, R>(KeyPath<R, C?>, ClosedRange<C>) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-7t8hm","title":"func == <C, R, V>(KeyPath<R, C?>, V) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-80eds","title":"func == <C, R>(KeyPath<R, C>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-80t95","title":"func == <C, R>(KeyPath<R, C?>, ClosedRange<C>) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-8ckib","title":"func == <C, R>(KeyPath<R, C?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-8jat0","title":"func == <C, R>(KeyPath<R, C>, ClosedRange<C>) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-8kisw","title":"func == <C, R, V>(KeyPath<R, C>, V) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-950wu","title":"func == (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-9wngz","title":"func == <C, R>(KeyPath<R, C>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-pu9c","title":"func == <Root, Value>((Root) -> Value?, (Value, Value)) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-3g48o","title":"func ==* <R>(KeyPath<R, String>, String) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-5mmpg","title":"func ==* <R, C>(KeyPath<R, String>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-5ve4e","title":"func ==* <R>(KeyPath<R, String>, String) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-6ax4y","title":"func ==* <R, C>(KeyPath<R, String?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-70c5t","title":"func ==* <R, C>(KeyPath<R, String>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-7tmfu","title":"func ==* <R>(KeyPath<R, String?>, String) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-9dpmp","title":"func ==* <R, C>(KeyPath<R, String?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-9lxs4","title":"func ==* <R>(KeyPath<R, String?>, String) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-xlkw","title":"func ==* (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/===(_:_:)-3d2w2","title":"func === <C, R, V>(KeyPath<R, C?>, V) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/===(_:_:)-4u0uy","title":"func === <C, R, V>(KeyPath<R, C>, V) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/===(_:_:)-6gyv7","title":"func === (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/===(_:_:)-nqwn","title":"func === <C, R, V>(KeyPath<R, C>, V) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/===(_:_:)-pboo","title":"func === <C, R, V>(KeyPath<R, C?>, V) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-3dy2a","title":"func ± <Value>(Value, Value) -> (Value, Value)","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-5a953","title":"func < (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-5cbsm","title":"func < <C, R>(KeyPath<R, C?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-68c7h","title":"func < <Root, Value>((Root) -> Value, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-6hgks","title":"func > <C, R>(KeyPath<R, C>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-730sf","title":"func > <Root, Value>((Root) -> Value?, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-7q61b","title":"func < <C, R>(KeyPath<R, C>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-7we36","title":"func > (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-87gcd","title":"func > <C, R>(KeyPath<R, C?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-8doyl","title":"func > <Root, Value>((Root) -> Value, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-8trl4","title":"func < <Root, Value>((Root) -> Value?, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-9foij","title":"func > <C, R>(KeyPath<R, C>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-9hjjz","title":"func < <C, R>(KeyPath<R, C>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-mib4","title":"func < <C, R>(KeyPath<R, C?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-z933","title":"func > <C, R>(KeyPath<R, C?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-1iagn","title":"func <= <C, R>(KeyPath<R, C>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-2wt4i","title":"func >= <Root, Value>((Root) -> Value, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-39dxj","title":"func <= <Root, Value>((Root) -> Value, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-4y8n","title":"func >= <Root, Value>((Root) -> Value?, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-4yrsb","title":"func <= (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-69ze3","title":"func <= <Root, Value>((Root) -> Value?, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-6i9zn","title":"func >= <C, R>(KeyPath<R, C?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-6ru1a","title":"func >= <C, R>(KeyPath<R, C>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-6ui50","title":"func <= <C, R>(KeyPath<R, C>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-6zdll","title":"func >= <C, R>(KeyPath<R, C?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-764d3","title":"func >= <C, R>(KeyPath<R, C>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-9hpks","title":"func >= (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-9ovfv","title":"func <= <C, R>(KeyPath<R, C?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-ck9o","title":"func <= <C, R>(KeyPath<R, C?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/__!(_:_:)-50fgk","title":"func <<! <Root, S>((Root) -> S, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__!(_:_:)-5nw7d","title":"func >>! <Root, S>((Root) -> S?, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__!(_:_:)-7f0qv","title":"func <<! <Root, S>((Root) -> S?, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__!(_:_:)-7hg2k","title":"func >>! <Root, S>((Root) -> S, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:)-1x15l","title":"func << <Root>(PartialKeyPath<Root>) -> PartialSortingKeyPath<Root>","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:)-200m4","title":"func >> <Root>(PartialKeyPath<Root>) -> PartialSortingKeyPath<Root>","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-1ljy0","title":"func << <Root, Value>((Root) -> Value?, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-1rp1i","title":"func << <Root, Value>((Root) -> Value, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-1t9h7","title":"func || <Root>((Root) -> Bool, () -> Bool) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-2317a","title":"func << <Root, Value>((Root) -> Value?, PartialRangeThrough<Value>) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-2bqco","title":"func >< (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-36vir","title":"func << <Root, S>((Root) -> S.Element, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-3ltm0","title":"func || <Root>((Root) -> Bool, (Root) -> Bool) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-3qp9f","title":"func << <Root, S>((Root) -> S.Element?, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-3yd62","title":"func << <Root, S>((Root) -> S, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-4lu3u","title":"func || <Root>(() -> Bool, (Root) -> Bool) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-4nx77","title":"func << <Root, Value>((Root) -> Value?, ClosedRange<Value>) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-53cyv","title":"func << <Root, Value>((Root) -> Value, PartialRangeThrough<Value>) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-5jj8o","title":"func << <Root, Value>((Root) -> Value?, PartialRangeUpTo<Value>) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-62suo","title":"func << <Root, Value>((Root) -> Value, ClosedRange<Value>) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-6ad2x","title":"func << <Root, Value>((Root) -> Value, PartialRangeFrom<Value>) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-6pvyz","title":"func >> <Root, S>((Root) -> S, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-6tvwr","title":"func >> <Root, S>((Root) -> S?, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-752ir","title":"func << <Root, S>((Root) -> S?, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-7w7ak","title":"func || (NSPredicate, NSPredicate) -> NSCompoundPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-8lwm1","title":"func << <Root, Value>((Root) -> Value?, PartialRangeFrom<Value>) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-8zboe","title":"func >> <Root, S>((Root) -> S?, S.Element) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-965rc","title":"func >> <Root, S>((Root) -> S, S.Element) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-98ooj","title":"func << <Root, Value>((Root) -> Value, PartialRangeUpTo<Value>) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__~(_:_:)-1v9lk","title":"func <<~ <Root, S>((Root) -> S.Element, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__~(_:_:)-3oses","title":"func <<~ <Root, S>((Root) -> S.Element?, S) -> (Root) -> Bool","type":"op"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalueiso8601","title":"DateValueISO8601","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/datevaluetimestamp","title":"DateValueTimestamp","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/datevalueyearmonthday","title":"DateValueYearMonthDay","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/defaultemptyarray","title":"DefaultEmptyArray","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/defaultfalse","title":"DefaultFalse","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/defaulttrue","title":"DefaultTrue","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/defaultzero","title":"DefaultZero","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuibezierpath","title":"NSUIBezierPath","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuicollectionview","title":"NSUICollectionView","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuicollectionviewcompositionallayout","title":"NSUICollectionViewCompositionalLayout","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuicollectionviewcompositionallayoutconfiguration","title":"NSUICollectionViewCompositionalLayoutConfiguration","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuicollectionviewdelegate","title":"NSUICollectionViewDelegate","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuicollectionviewitem","title":"NSUICollectionViewItem","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuicollectionviewlayout","title":"NSUICollectionViewLayout","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuicollectionviewlayoutattributes","title":"NSUICollectionViewLayoutAttributes","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuicolor","title":"NSUIColor","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuiedgeinsets","title":"NSUIEdgeInsets","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuifont","title":"NSUIFont","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuifontdescriptor","title":"NSUIFontDescriptor","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuifonttextstyle","title":"NSUIFontTextStyle","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuihostingcontroller","title":"NSUIHostingController","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuiimage","title":"NSUIImage","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuiimagesymbolconfiguration","title":"NSUIImageSymbolConfiguration","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuiimagesymbolscale","title":"NSUIImageSymbolScale","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuilayoutguide","title":"NSUILayoutGuide","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuinib","title":"NSUINib","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuisegmentedcontrol","title":"NSUISegmentedControl","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuistackview","title":"NSUIStackView","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuistoryboard","title":"NSUIStoryboard","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuiview","title":"NSUIView","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuiviewcontroller","title":"NSUIViewController","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/first","title":"case first","type":"case"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/last","title":"case last","type":"case"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/next","title":"case next","type":"case"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/nextlooping","title":"case nextLooping","type":"case"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/previous","title":"case previous","type":"case"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/previouslooping","title":"case previousLooping","type":"case"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/random","title":"case random","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/isequal(_:)-4mrtu","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/isequal(_:)-8edoc","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/advanceoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/advanceoption","title":"AdvanceOption","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/floatingpointplacesroundingrule\/toplaces(_:)","title":"case toPlaces(Int)","type":"case"},{"path":"\/documentation\/fzswiftutils\/floatingpointplacesroundingrule\/toplacestowardzero(_:)","title":"case toPlacesTowardZero(Int)","type":"case"}],"path":"\/documentation\/fzswiftutils\/floatingpointplacesroundingrule","title":"FloatingPointPlacesRoundingRule","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/sequencesortingorder\/ascending","title":"case ascending","type":"case"},{"path":"\/documentation\/fzswiftutils\/sequencesortingorder\/descending","title":"case descending","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/sequencesortingorder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/sequencesortingorder\/isequal(_:)-2hab8","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/sequencesortingorder\/isequal(_:)-9kmot","title":"func isEqual((any Equatable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/sequencesortingorder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/sequencesortingorder","title":"SequenceSortingOrder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/status\/complete","title":"case complete","type":"case"},{"path":"\/documentation\/fzswiftutils\/status\/incomplete","title":"case incomplete","type":"case"},{"path":"\/documentation\/fzswiftutils\/status\/invaliddata","title":"case invalidData","type":"case"},{"path":"\/documentation\/fzswiftutils\/status\/other(_:)","title":"case other(CGImageSourceStatus)","type":"case"},{"path":"\/documentation\/fzswiftutils\/status\/readingheader","title":"case readingHeader","type":"case"},{"path":"\/documentation\/fzswiftutils\/status\/unexpectedeof","title":"case unexpectedEOF","type":"case"},{"path":"\/documentation\/fzswiftutils\/status\/unknowntype","title":"case unknownType","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/status\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/status","title":"Status","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/stringmatchoption\/composedcharactersequences","title":"case composedCharacterSequences","type":"case"},{"path":"\/documentation\/fzswiftutils\/stringmatchoption\/lines","title":"case lines","type":"case"},{"path":"\/documentation\/fzswiftutils\/stringmatchoption\/paragraphs","title":"case paragraphs","type":"case"},{"path":"\/documentation\/fzswiftutils\/stringmatchoption\/sentences","title":"case sentences","type":"case"},{"path":"\/documentation\/fzswiftutils\/stringmatchoption\/words","title":"case words","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/stringmatchoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/stringmatchoption\/isequal(_:)-3smfw","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/stringmatchoption\/isequal(_:)-9tg6d","title":"func isEqual(any Equatable) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/stringmatchoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/stringmatchoption","title":"StringMatchOption","type":"enum"}],"path":"\/documentation\/fzswiftutils","title":"FZSwiftUtils","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}